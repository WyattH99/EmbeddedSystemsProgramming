/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


// MACROS
#define IRQNO_TIMER2 28
#define IRQNO_I2C1   31

// Global Variables to hold the Base Addresses
uint32_t *pNVIC_IPRBase = (uint32_t*)0xE000E400; // Interrupt Priority Registers
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100; // Interrupt Set-enable Registers
uint32_t *pNVIC_ISPRBase = (uint32_t*)0XE000E200; // Interrupt Set-pending Registers

void configure_priority_for_irqs(uint8_t irq_num, uint8_t priority_value){
	// 1. Find out iprx
	uint8_t iprx = irq_num / 4;
	uint32_t *ipr = pNVIC_IPRBase + iprx;

	// 2. Find the Position in iprx
	uint8_t position = (irq_num % 4) * 8;

	// 3. Configure the Priority
	*ipr &= ~(0xFF << position); // Clear the Priority
	*ipr |= (priority_value << position); // Set it

}

int main(void)
{

	// 1. Configure the Priority for the Peripherals to be 0x80
	// This is a Helper Function
	configure_priority_for_irqs(IRQNO_TIMER2, 0x80);
	configure_priority_for_irqs(IRQNO_I2C1, 0x80);

	// 2. Set the Interrupt Pending Bit in the NVIC PR
	*pNVIC_ISPRBase |= (1 << IRQNO_TIMER2);

	// 3. Enable the IRQs in NVIC ISER
	*pNVIC_ISERBase |= (1 << IRQNO_I2C1);
	*pNVIC_ISERBase |= (1 << IRQNO_TIMER2);


    /* Loop forever */
	for(;;);
}


// Implementation of the ISRS Found in Startup file
void TIM2_IRQHandler(void){
	printf("In TIM2_IRQHandler\n");
	*pNVIC_ISPRBase |= (1 << IRQNO_I2C1); // Pend the I2C1 Interrupt
	while(1);
}

void I2C1_EV_IRQHandler(void){
	printf("In I2C1_EV_IRQHandler\n");
}







