
07Stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000127c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  0800144c  0800144c  0001144c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014a0  080014a0  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080014a0  080014a0  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014a0  080014a0  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014a0  080014a0  000114a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014a4  080014a4  000114a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080014a8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001504  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001504  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000099e  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000036d  00000000  00000000  00020a67  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00020dd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d6  00000000  00000000  00020f10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cb3  00000000  00000000  00020fe6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000123a  00000000  00000000  00023c99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009850  00000000  00000000  00024ed3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000bbc  00000000  00000000  0002e724  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  0002f2e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001434 	.word	0x08001434

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08001434 	.word	0x08001434

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <fun_add>:

#define STACK_MSP_START STACK_START
#define STACK_MSP_END   STACK_MSP_START + 512 // Half of the 1024 size of Stack
#define STACK_PSP_START STACK_MSP_END

int fun_add(int a, int b, int c, int d){
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	60f8      	str	r0, [r7, #12]
 80002b8:	60b9      	str	r1, [r7, #8]
 80002ba:	607a      	str	r2, [r7, #4]
 80002bc:	603b      	str	r3, [r7, #0]
	return a+b+c+d;
 80002be:	68fa      	ldr	r2, [r7, #12]
 80002c0:	68bb      	ldr	r3, [r7, #8]
 80002c2:	441a      	add	r2, r3
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	441a      	add	r2, r3
 80002c8:	683b      	ldr	r3, [r7, #0]
 80002ca:	4413      	add	r3, r2
}
 80002cc:	4618      	mov	r0, r3
 80002ce:	3714      	adds	r7, #20
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bc80      	pop	{r7}
 80002d4:	4770      	bx	lr
	...

080002d8 <change_sp_to_psp>:
__attribute__((naked)) void change_sp_to_psp(void){
	// Initialize the PSP in the middle of the Stack
	// Cant use the Macros in Assembly so have to use .equ
	__asm volatile(".equ SRAM_END, (0x20000000 + (128 * 1024))");
	__asm volatile(".equ PSP_START, (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 80002d8:	4804      	ldr	r0, [pc, #16]	; (80002ec <change_sp_to_psp+0x14>)
	__asm volatile("MSR PSP,R0");
 80002da:	f380 8809 	msr	PSP, r0
	// Use the Control Register to change the SP to PSP by setting the SPSEL bit to 1
	__asm volatile("MOV R0,#0X02");
 80002de:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL,R0");
 80002e2:	f380 8814 	msr	CONTROL, r0
	// Return back to the Main Function using the Branch Indirect (BX)
	__asm volatile("BX LR");
 80002e6:	4770      	bx	lr

}
 80002e8:	bf00      	nop
 80002ea:	0000      	.short	0x0000
 80002ec:	2001fe00 	.word	0x2001fe00

080002f0 <generate_exception>:

void generate_exception(void){
 80002f0:	b480      	push	{r7}
 80002f2:	af00      	add	r7, sp, #0
	// SVC exception handler will be called
	// Handler mode will always change SP back to the MSP (Main Stack Pointer)
	__asm volatile("SVC #0X2");
 80002f4:	df02      	svc	2
}
 80002f6:	bf00      	nop
 80002f8:	46bd      	mov	sp, r7
 80002fa:	bc80      	pop	{r7}
 80002fc:	4770      	bx	lr
	...

08000300 <main>:


int main(void)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b082      	sub	sp, #8
 8000304:	af00      	add	r7, sp, #0
	// Cut the Stack into two
	// Thread Mode Code Which Should be using PSP (Process Stack Pointer)
	// Handler Code is going to use MSP (Main Stack Pointer)

	change_sp_to_psp();
 8000306:	f7ff ffe7 	bl	80002d8 <change_sp_to_psp>

	int ret;

	ret = fun_add(1, 4, 5, 6);
 800030a:	2306      	movs	r3, #6
 800030c:	2205      	movs	r2, #5
 800030e:	2104      	movs	r1, #4
 8000310:	2001      	movs	r0, #1
 8000312:	f7ff ffcd 	bl	80002b0 <fun_add>
 8000316:	6078      	str	r0, [r7, #4]

	printf("result = %d\n", ret);
 8000318:	6879      	ldr	r1, [r7, #4]
 800031a:	4803      	ldr	r0, [pc, #12]	; (8000328 <main+0x28>)
 800031c:	f000 f9c2 	bl	80006a4 <iprintf>

	generate_exception();
 8000320:	f7ff ffe6 	bl	80002f0 <generate_exception>

    /* Loop forever */
	for(;;);
 8000324:	e7fe      	b.n	8000324 <main+0x24>
 8000326:	bf00      	nop
 8000328:	0800144c 	.word	0x0800144c

0800032c <SVC_Handler>:
}


void SVC_Handler(void){
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0
	printf("In SVC_Handler\n");
 8000330:	4802      	ldr	r0, [pc, #8]	; (800033c <SVC_Handler+0x10>)
 8000332:	f000 fa1d 	bl	8000770 <puts>
}
 8000336:	bf00      	nop
 8000338:	bd80      	pop	{r7, pc}
 800033a:	bf00      	nop
 800033c:	0800145c 	.word	0x0800145c

08000340 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000340:	b480      	push	{r7}
 8000342:	b083      	sub	sp, #12
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800034a:	4b0e      	ldr	r3, [pc, #56]	; (8000384 <ITM_SendChar+0x44>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a0d      	ldr	r2, [pc, #52]	; (8000384 <ITM_SendChar+0x44>)
 8000350:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000354:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000356:	4b0c      	ldr	r3, [pc, #48]	; (8000388 <ITM_SendChar+0x48>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4a0b      	ldr	r2, [pc, #44]	; (8000388 <ITM_SendChar+0x48>)
 800035c:	f043 0301 	orr.w	r3, r3, #1
 8000360:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000362:	bf00      	nop
 8000364:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	f003 0301 	and.w	r3, r3, #1
 800036e:	2b00      	cmp	r3, #0
 8000370:	d0f8      	beq.n	8000364 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000372:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000376:	79fb      	ldrb	r3, [r7, #7]
 8000378:	6013      	str	r3, [r2, #0]
}
 800037a:	bf00      	nop
 800037c:	370c      	adds	r7, #12
 800037e:	46bd      	mov	sp, r7
 8000380:	bc80      	pop	{r7}
 8000382:	4770      	bx	lr
 8000384:	e000edfc 	.word	0xe000edfc
 8000388:	e0000e00 	.word	0xe0000e00

0800038c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800038c:	b580      	push	{r7, lr}
 800038e:	b086      	sub	sp, #24
 8000390:	af00      	add	r7, sp, #0
 8000392:	60f8      	str	r0, [r7, #12]
 8000394:	60b9      	str	r1, [r7, #8]
 8000396:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000398:	2300      	movs	r3, #0
 800039a:	617b      	str	r3, [r7, #20]
 800039c:	e00a      	b.n	80003b4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800039e:	f3af 8000 	nop.w
 80003a2:	4601      	mov	r1, r0
 80003a4:	68bb      	ldr	r3, [r7, #8]
 80003a6:	1c5a      	adds	r2, r3, #1
 80003a8:	60ba      	str	r2, [r7, #8]
 80003aa:	b2ca      	uxtb	r2, r1
 80003ac:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ae:	697b      	ldr	r3, [r7, #20]
 80003b0:	3301      	adds	r3, #1
 80003b2:	617b      	str	r3, [r7, #20]
 80003b4:	697a      	ldr	r2, [r7, #20]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	429a      	cmp	r2, r3
 80003ba:	dbf0      	blt.n	800039e <_read+0x12>
  }

  return len;
 80003bc:	687b      	ldr	r3, [r7, #4]
}
 80003be:	4618      	mov	r0, r3
 80003c0:	3718      	adds	r7, #24
 80003c2:	46bd      	mov	sp, r7
 80003c4:	bd80      	pop	{r7, pc}

080003c6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003c6:	b580      	push	{r7, lr}
 80003c8:	b086      	sub	sp, #24
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	60f8      	str	r0, [r7, #12]
 80003ce:	60b9      	str	r1, [r7, #8]
 80003d0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d2:	2300      	movs	r3, #0
 80003d4:	617b      	str	r3, [r7, #20]
 80003d6:	e009      	b.n	80003ec <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	1c5a      	adds	r2, r3, #1
 80003dc:	60ba      	str	r2, [r7, #8]
 80003de:	781b      	ldrb	r3, [r3, #0]
 80003e0:	4618      	mov	r0, r3
 80003e2:	f7ff ffad 	bl	8000340 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e6:	697b      	ldr	r3, [r7, #20]
 80003e8:	3301      	adds	r3, #1
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	697a      	ldr	r2, [r7, #20]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	dbf1      	blt.n	80003d8 <_write+0x12>
  }
  return len;
 80003f4:	687b      	ldr	r3, [r7, #4]
}
 80003f6:	4618      	mov	r0, r3
 80003f8:	3718      	adds	r7, #24
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bd80      	pop	{r7, pc}

080003fe <_close>:

int _close(int file)
{
 80003fe:	b480      	push	{r7}
 8000400:	b083      	sub	sp, #12
 8000402:	af00      	add	r7, sp, #0
 8000404:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000406:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800040a:	4618      	mov	r0, r3
 800040c:	370c      	adds	r7, #12
 800040e:	46bd      	mov	sp, r7
 8000410:	bc80      	pop	{r7}
 8000412:	4770      	bx	lr

08000414 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000414:	b480      	push	{r7}
 8000416:	b083      	sub	sp, #12
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
 800041c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800041e:	683b      	ldr	r3, [r7, #0]
 8000420:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000424:	605a      	str	r2, [r3, #4]
  return 0;
 8000426:	2300      	movs	r3, #0
}
 8000428:	4618      	mov	r0, r3
 800042a:	370c      	adds	r7, #12
 800042c:	46bd      	mov	sp, r7
 800042e:	bc80      	pop	{r7}
 8000430:	4770      	bx	lr

08000432 <_isatty>:

int _isatty(int file)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800043a:	2301      	movs	r3, #1
}
 800043c:	4618      	mov	r0, r3
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	bc80      	pop	{r7}
 8000444:	4770      	bx	lr

08000446 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000446:	b480      	push	{r7}
 8000448:	b085      	sub	sp, #20
 800044a:	af00      	add	r7, sp, #0
 800044c:	60f8      	str	r0, [r7, #12]
 800044e:	60b9      	str	r1, [r7, #8]
 8000450:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000452:	2300      	movs	r3, #0
}
 8000454:	4618      	mov	r0, r3
 8000456:	3714      	adds	r7, #20
 8000458:	46bd      	mov	sp, r7
 800045a:	bc80      	pop	{r7}
 800045c:	4770      	bx	lr
	...

08000460 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000460:	b580      	push	{r7, lr}
 8000462:	b086      	sub	sp, #24
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000468:	4a14      	ldr	r2, [pc, #80]	; (80004bc <_sbrk+0x5c>)
 800046a:	4b15      	ldr	r3, [pc, #84]	; (80004c0 <_sbrk+0x60>)
 800046c:	1ad3      	subs	r3, r2, r3
 800046e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000470:	697b      	ldr	r3, [r7, #20]
 8000472:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000474:	4b13      	ldr	r3, [pc, #76]	; (80004c4 <_sbrk+0x64>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	2b00      	cmp	r3, #0
 800047a:	d102      	bne.n	8000482 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800047c:	4b11      	ldr	r3, [pc, #68]	; (80004c4 <_sbrk+0x64>)
 800047e:	4a12      	ldr	r2, [pc, #72]	; (80004c8 <_sbrk+0x68>)
 8000480:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000482:	4b10      	ldr	r3, [pc, #64]	; (80004c4 <_sbrk+0x64>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4413      	add	r3, r2
 800048a:	693a      	ldr	r2, [r7, #16]
 800048c:	429a      	cmp	r2, r3
 800048e:	d207      	bcs.n	80004a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000490:	f000 fa9c 	bl	80009cc <__errno>
 8000494:	4603      	mov	r3, r0
 8000496:	220c      	movs	r2, #12
 8000498:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800049a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800049e:	e009      	b.n	80004b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a0:	4b08      	ldr	r3, [pc, #32]	; (80004c4 <_sbrk+0x64>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004a6:	4b07      	ldr	r3, [pc, #28]	; (80004c4 <_sbrk+0x64>)
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4413      	add	r3, r2
 80004ae:	4a05      	ldr	r2, [pc, #20]	; (80004c4 <_sbrk+0x64>)
 80004b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004b2:	68fb      	ldr	r3, [r7, #12]
}
 80004b4:	4618      	mov	r0, r3
 80004b6:	3718      	adds	r7, #24
 80004b8:	46bd      	mov	sp, r7
 80004ba:	bd80      	pop	{r7, pc}
 80004bc:	20020000 	.word	0x20020000
 80004c0:	00000400 	.word	0x00000400
 80004c4:	20000078 	.word	0x20000078
 80004c8:	200001c8 	.word	0x200001c8

080004cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004cc:	480d      	ldr	r0, [pc, #52]	; (8000504 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	; (8000508 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	; (800050c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	; (8000510 <LoopForever+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	; (8000518 <LoopForever+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fa:	f000 fa6d 	bl	80009d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fe:	f7ff feff 	bl	8000300 <main>

08000502 <LoopForever>:

LoopForever:
  b LoopForever
 8000502:	e7fe      	b.n	8000502 <LoopForever>
  ldr   r0, =_estack
 8000504:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000510:	080014a8 	.word	0x080014a8
  ldr r2, =_sbss
 8000514:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000518:	200001c8 	.word	0x200001c8

0800051c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC_IRQHandler>
	...

08000520 <std>:
 8000520:	2300      	movs	r3, #0
 8000522:	b510      	push	{r4, lr}
 8000524:	4604      	mov	r4, r0
 8000526:	e9c0 3300 	strd	r3, r3, [r0]
 800052a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800052e:	6083      	str	r3, [r0, #8]
 8000530:	8181      	strh	r1, [r0, #12]
 8000532:	6643      	str	r3, [r0, #100]	; 0x64
 8000534:	81c2      	strh	r2, [r0, #14]
 8000536:	6183      	str	r3, [r0, #24]
 8000538:	4619      	mov	r1, r3
 800053a:	2208      	movs	r2, #8
 800053c:	305c      	adds	r0, #92	; 0x5c
 800053e:	f000 f9f7 	bl	8000930 <memset>
 8000542:	4b0d      	ldr	r3, [pc, #52]	; (8000578 <std+0x58>)
 8000544:	6263      	str	r3, [r4, #36]	; 0x24
 8000546:	4b0d      	ldr	r3, [pc, #52]	; (800057c <std+0x5c>)
 8000548:	62a3      	str	r3, [r4, #40]	; 0x28
 800054a:	4b0d      	ldr	r3, [pc, #52]	; (8000580 <std+0x60>)
 800054c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800054e:	4b0d      	ldr	r3, [pc, #52]	; (8000584 <std+0x64>)
 8000550:	6323      	str	r3, [r4, #48]	; 0x30
 8000552:	4b0d      	ldr	r3, [pc, #52]	; (8000588 <std+0x68>)
 8000554:	6224      	str	r4, [r4, #32]
 8000556:	429c      	cmp	r4, r3
 8000558:	d006      	beq.n	8000568 <std+0x48>
 800055a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800055e:	4294      	cmp	r4, r2
 8000560:	d002      	beq.n	8000568 <std+0x48>
 8000562:	33d0      	adds	r3, #208	; 0xd0
 8000564:	429c      	cmp	r4, r3
 8000566:	d105      	bne.n	8000574 <std+0x54>
 8000568:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800056c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000570:	f000 ba56 	b.w	8000a20 <__retarget_lock_init_recursive>
 8000574:	bd10      	pop	{r4, pc}
 8000576:	bf00      	nop
 8000578:	08000781 	.word	0x08000781
 800057c:	080007a3 	.word	0x080007a3
 8000580:	080007db 	.word	0x080007db
 8000584:	080007ff 	.word	0x080007ff
 8000588:	2000007c 	.word	0x2000007c

0800058c <stdio_exit_handler>:
 800058c:	4a02      	ldr	r2, [pc, #8]	; (8000598 <stdio_exit_handler+0xc>)
 800058e:	4903      	ldr	r1, [pc, #12]	; (800059c <stdio_exit_handler+0x10>)
 8000590:	4803      	ldr	r0, [pc, #12]	; (80005a0 <stdio_exit_handler+0x14>)
 8000592:	f000 b869 	b.w	8000668 <_fwalk_sglue>
 8000596:	bf00      	nop
 8000598:	20000000 	.word	0x20000000
 800059c:	080012bd 	.word	0x080012bd
 80005a0:	2000000c 	.word	0x2000000c

080005a4 <cleanup_stdio>:
 80005a4:	6841      	ldr	r1, [r0, #4]
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <cleanup_stdio+0x34>)
 80005a8:	4299      	cmp	r1, r3
 80005aa:	b510      	push	{r4, lr}
 80005ac:	4604      	mov	r4, r0
 80005ae:	d001      	beq.n	80005b4 <cleanup_stdio+0x10>
 80005b0:	f000 fe84 	bl	80012bc <_fflush_r>
 80005b4:	68a1      	ldr	r1, [r4, #8]
 80005b6:	4b09      	ldr	r3, [pc, #36]	; (80005dc <cleanup_stdio+0x38>)
 80005b8:	4299      	cmp	r1, r3
 80005ba:	d002      	beq.n	80005c2 <cleanup_stdio+0x1e>
 80005bc:	4620      	mov	r0, r4
 80005be:	f000 fe7d 	bl	80012bc <_fflush_r>
 80005c2:	68e1      	ldr	r1, [r4, #12]
 80005c4:	4b06      	ldr	r3, [pc, #24]	; (80005e0 <cleanup_stdio+0x3c>)
 80005c6:	4299      	cmp	r1, r3
 80005c8:	d004      	beq.n	80005d4 <cleanup_stdio+0x30>
 80005ca:	4620      	mov	r0, r4
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	f000 be74 	b.w	80012bc <_fflush_r>
 80005d4:	bd10      	pop	{r4, pc}
 80005d6:	bf00      	nop
 80005d8:	2000007c 	.word	0x2000007c
 80005dc:	200000e4 	.word	0x200000e4
 80005e0:	2000014c 	.word	0x2000014c

080005e4 <global_stdio_init.part.0>:
 80005e4:	b510      	push	{r4, lr}
 80005e6:	4b0b      	ldr	r3, [pc, #44]	; (8000614 <global_stdio_init.part.0+0x30>)
 80005e8:	4c0b      	ldr	r4, [pc, #44]	; (8000618 <global_stdio_init.part.0+0x34>)
 80005ea:	4a0c      	ldr	r2, [pc, #48]	; (800061c <global_stdio_init.part.0+0x38>)
 80005ec:	601a      	str	r2, [r3, #0]
 80005ee:	4620      	mov	r0, r4
 80005f0:	2200      	movs	r2, #0
 80005f2:	2104      	movs	r1, #4
 80005f4:	f7ff ff94 	bl	8000520 <std>
 80005f8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80005fc:	2201      	movs	r2, #1
 80005fe:	2109      	movs	r1, #9
 8000600:	f7ff ff8e 	bl	8000520 <std>
 8000604:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000608:	2202      	movs	r2, #2
 800060a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800060e:	2112      	movs	r1, #18
 8000610:	f7ff bf86 	b.w	8000520 <std>
 8000614:	200001b4 	.word	0x200001b4
 8000618:	2000007c 	.word	0x2000007c
 800061c:	0800058d 	.word	0x0800058d

08000620 <__sfp_lock_acquire>:
 8000620:	4801      	ldr	r0, [pc, #4]	; (8000628 <__sfp_lock_acquire+0x8>)
 8000622:	f000 b9fe 	b.w	8000a22 <__retarget_lock_acquire_recursive>
 8000626:	bf00      	nop
 8000628:	200001bd 	.word	0x200001bd

0800062c <__sfp_lock_release>:
 800062c:	4801      	ldr	r0, [pc, #4]	; (8000634 <__sfp_lock_release+0x8>)
 800062e:	f000 b9f9 	b.w	8000a24 <__retarget_lock_release_recursive>
 8000632:	bf00      	nop
 8000634:	200001bd 	.word	0x200001bd

08000638 <__sinit>:
 8000638:	b510      	push	{r4, lr}
 800063a:	4604      	mov	r4, r0
 800063c:	f7ff fff0 	bl	8000620 <__sfp_lock_acquire>
 8000640:	6a23      	ldr	r3, [r4, #32]
 8000642:	b11b      	cbz	r3, 800064c <__sinit+0x14>
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	f7ff bff0 	b.w	800062c <__sfp_lock_release>
 800064c:	4b04      	ldr	r3, [pc, #16]	; (8000660 <__sinit+0x28>)
 800064e:	6223      	str	r3, [r4, #32]
 8000650:	4b04      	ldr	r3, [pc, #16]	; (8000664 <__sinit+0x2c>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	2b00      	cmp	r3, #0
 8000656:	d1f5      	bne.n	8000644 <__sinit+0xc>
 8000658:	f7ff ffc4 	bl	80005e4 <global_stdio_init.part.0>
 800065c:	e7f2      	b.n	8000644 <__sinit+0xc>
 800065e:	bf00      	nop
 8000660:	080005a5 	.word	0x080005a5
 8000664:	200001b4 	.word	0x200001b4

08000668 <_fwalk_sglue>:
 8000668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800066c:	4607      	mov	r7, r0
 800066e:	4688      	mov	r8, r1
 8000670:	4614      	mov	r4, r2
 8000672:	2600      	movs	r6, #0
 8000674:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000678:	f1b9 0901 	subs.w	r9, r9, #1
 800067c:	d505      	bpl.n	800068a <_fwalk_sglue+0x22>
 800067e:	6824      	ldr	r4, [r4, #0]
 8000680:	2c00      	cmp	r4, #0
 8000682:	d1f7      	bne.n	8000674 <_fwalk_sglue+0xc>
 8000684:	4630      	mov	r0, r6
 8000686:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800068a:	89ab      	ldrh	r3, [r5, #12]
 800068c:	2b01      	cmp	r3, #1
 800068e:	d907      	bls.n	80006a0 <_fwalk_sglue+0x38>
 8000690:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000694:	3301      	adds	r3, #1
 8000696:	d003      	beq.n	80006a0 <_fwalk_sglue+0x38>
 8000698:	4629      	mov	r1, r5
 800069a:	4638      	mov	r0, r7
 800069c:	47c0      	blx	r8
 800069e:	4306      	orrs	r6, r0
 80006a0:	3568      	adds	r5, #104	; 0x68
 80006a2:	e7e9      	b.n	8000678 <_fwalk_sglue+0x10>

080006a4 <iprintf>:
 80006a4:	b40f      	push	{r0, r1, r2, r3}
 80006a6:	b507      	push	{r0, r1, r2, lr}
 80006a8:	4906      	ldr	r1, [pc, #24]	; (80006c4 <iprintf+0x20>)
 80006aa:	ab04      	add	r3, sp, #16
 80006ac:	6808      	ldr	r0, [r1, #0]
 80006ae:	f853 2b04 	ldr.w	r2, [r3], #4
 80006b2:	6881      	ldr	r1, [r0, #8]
 80006b4:	9301      	str	r3, [sp, #4]
 80006b6:	f000 fad5 	bl	8000c64 <_vfiprintf_r>
 80006ba:	b003      	add	sp, #12
 80006bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80006c0:	b004      	add	sp, #16
 80006c2:	4770      	bx	lr
 80006c4:	20000058 	.word	0x20000058

080006c8 <_puts_r>:
 80006c8:	6a03      	ldr	r3, [r0, #32]
 80006ca:	b570      	push	{r4, r5, r6, lr}
 80006cc:	6884      	ldr	r4, [r0, #8]
 80006ce:	4605      	mov	r5, r0
 80006d0:	460e      	mov	r6, r1
 80006d2:	b90b      	cbnz	r3, 80006d8 <_puts_r+0x10>
 80006d4:	f7ff ffb0 	bl	8000638 <__sinit>
 80006d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006da:	07db      	lsls	r3, r3, #31
 80006dc:	d405      	bmi.n	80006ea <_puts_r+0x22>
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	0598      	lsls	r0, r3, #22
 80006e2:	d402      	bmi.n	80006ea <_puts_r+0x22>
 80006e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006e6:	f000 f99c 	bl	8000a22 <__retarget_lock_acquire_recursive>
 80006ea:	89a3      	ldrh	r3, [r4, #12]
 80006ec:	0719      	lsls	r1, r3, #28
 80006ee:	d513      	bpl.n	8000718 <_puts_r+0x50>
 80006f0:	6923      	ldr	r3, [r4, #16]
 80006f2:	b18b      	cbz	r3, 8000718 <_puts_r+0x50>
 80006f4:	3e01      	subs	r6, #1
 80006f6:	68a3      	ldr	r3, [r4, #8]
 80006f8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006fc:	3b01      	subs	r3, #1
 80006fe:	60a3      	str	r3, [r4, #8]
 8000700:	b9e9      	cbnz	r1, 800073e <_puts_r+0x76>
 8000702:	2b00      	cmp	r3, #0
 8000704:	da2e      	bge.n	8000764 <_puts_r+0x9c>
 8000706:	4622      	mov	r2, r4
 8000708:	210a      	movs	r1, #10
 800070a:	4628      	mov	r0, r5
 800070c:	f000 f87b 	bl	8000806 <__swbuf_r>
 8000710:	3001      	adds	r0, #1
 8000712:	d007      	beq.n	8000724 <_puts_r+0x5c>
 8000714:	250a      	movs	r5, #10
 8000716:	e007      	b.n	8000728 <_puts_r+0x60>
 8000718:	4621      	mov	r1, r4
 800071a:	4628      	mov	r0, r5
 800071c:	f000 f8b0 	bl	8000880 <__swsetup_r>
 8000720:	2800      	cmp	r0, #0
 8000722:	d0e7      	beq.n	80006f4 <_puts_r+0x2c>
 8000724:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000728:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800072a:	07da      	lsls	r2, r3, #31
 800072c:	d405      	bmi.n	800073a <_puts_r+0x72>
 800072e:	89a3      	ldrh	r3, [r4, #12]
 8000730:	059b      	lsls	r3, r3, #22
 8000732:	d402      	bmi.n	800073a <_puts_r+0x72>
 8000734:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000736:	f000 f975 	bl	8000a24 <__retarget_lock_release_recursive>
 800073a:	4628      	mov	r0, r5
 800073c:	bd70      	pop	{r4, r5, r6, pc}
 800073e:	2b00      	cmp	r3, #0
 8000740:	da04      	bge.n	800074c <_puts_r+0x84>
 8000742:	69a2      	ldr	r2, [r4, #24]
 8000744:	429a      	cmp	r2, r3
 8000746:	dc06      	bgt.n	8000756 <_puts_r+0x8e>
 8000748:	290a      	cmp	r1, #10
 800074a:	d004      	beq.n	8000756 <_puts_r+0x8e>
 800074c:	6823      	ldr	r3, [r4, #0]
 800074e:	1c5a      	adds	r2, r3, #1
 8000750:	6022      	str	r2, [r4, #0]
 8000752:	7019      	strb	r1, [r3, #0]
 8000754:	e7cf      	b.n	80006f6 <_puts_r+0x2e>
 8000756:	4622      	mov	r2, r4
 8000758:	4628      	mov	r0, r5
 800075a:	f000 f854 	bl	8000806 <__swbuf_r>
 800075e:	3001      	adds	r0, #1
 8000760:	d1c9      	bne.n	80006f6 <_puts_r+0x2e>
 8000762:	e7df      	b.n	8000724 <_puts_r+0x5c>
 8000764:	6823      	ldr	r3, [r4, #0]
 8000766:	250a      	movs	r5, #10
 8000768:	1c5a      	adds	r2, r3, #1
 800076a:	6022      	str	r2, [r4, #0]
 800076c:	701d      	strb	r5, [r3, #0]
 800076e:	e7db      	b.n	8000728 <_puts_r+0x60>

08000770 <puts>:
 8000770:	4b02      	ldr	r3, [pc, #8]	; (800077c <puts+0xc>)
 8000772:	4601      	mov	r1, r0
 8000774:	6818      	ldr	r0, [r3, #0]
 8000776:	f7ff bfa7 	b.w	80006c8 <_puts_r>
 800077a:	bf00      	nop
 800077c:	20000058 	.word	0x20000058

08000780 <__sread>:
 8000780:	b510      	push	{r4, lr}
 8000782:	460c      	mov	r4, r1
 8000784:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000788:	f000 f8fc 	bl	8000984 <_read_r>
 800078c:	2800      	cmp	r0, #0
 800078e:	bfab      	itete	ge
 8000790:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000792:	89a3      	ldrhlt	r3, [r4, #12]
 8000794:	181b      	addge	r3, r3, r0
 8000796:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800079a:	bfac      	ite	ge
 800079c:	6563      	strge	r3, [r4, #84]	; 0x54
 800079e:	81a3      	strhlt	r3, [r4, #12]
 80007a0:	bd10      	pop	{r4, pc}

080007a2 <__swrite>:
 80007a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007a6:	461f      	mov	r7, r3
 80007a8:	898b      	ldrh	r3, [r1, #12]
 80007aa:	05db      	lsls	r3, r3, #23
 80007ac:	4605      	mov	r5, r0
 80007ae:	460c      	mov	r4, r1
 80007b0:	4616      	mov	r6, r2
 80007b2:	d505      	bpl.n	80007c0 <__swrite+0x1e>
 80007b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007b8:	2302      	movs	r3, #2
 80007ba:	2200      	movs	r2, #0
 80007bc:	f000 f8d0 	bl	8000960 <_lseek_r>
 80007c0:	89a3      	ldrh	r3, [r4, #12]
 80007c2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80007c6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80007ca:	81a3      	strh	r3, [r4, #12]
 80007cc:	4632      	mov	r2, r6
 80007ce:	463b      	mov	r3, r7
 80007d0:	4628      	mov	r0, r5
 80007d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80007d6:	f000 b8e7 	b.w	80009a8 <_write_r>

080007da <__sseek>:
 80007da:	b510      	push	{r4, lr}
 80007dc:	460c      	mov	r4, r1
 80007de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007e2:	f000 f8bd 	bl	8000960 <_lseek_r>
 80007e6:	1c43      	adds	r3, r0, #1
 80007e8:	89a3      	ldrh	r3, [r4, #12]
 80007ea:	bf15      	itete	ne
 80007ec:	6560      	strne	r0, [r4, #84]	; 0x54
 80007ee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80007f2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80007f6:	81a3      	strheq	r3, [r4, #12]
 80007f8:	bf18      	it	ne
 80007fa:	81a3      	strhne	r3, [r4, #12]
 80007fc:	bd10      	pop	{r4, pc}

080007fe <__sclose>:
 80007fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000802:	f000 b89d 	b.w	8000940 <_close_r>

08000806 <__swbuf_r>:
 8000806:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000808:	460e      	mov	r6, r1
 800080a:	4614      	mov	r4, r2
 800080c:	4605      	mov	r5, r0
 800080e:	b118      	cbz	r0, 8000818 <__swbuf_r+0x12>
 8000810:	6a03      	ldr	r3, [r0, #32]
 8000812:	b90b      	cbnz	r3, 8000818 <__swbuf_r+0x12>
 8000814:	f7ff ff10 	bl	8000638 <__sinit>
 8000818:	69a3      	ldr	r3, [r4, #24]
 800081a:	60a3      	str	r3, [r4, #8]
 800081c:	89a3      	ldrh	r3, [r4, #12]
 800081e:	071a      	lsls	r2, r3, #28
 8000820:	d525      	bpl.n	800086e <__swbuf_r+0x68>
 8000822:	6923      	ldr	r3, [r4, #16]
 8000824:	b31b      	cbz	r3, 800086e <__swbuf_r+0x68>
 8000826:	6823      	ldr	r3, [r4, #0]
 8000828:	6922      	ldr	r2, [r4, #16]
 800082a:	1a98      	subs	r0, r3, r2
 800082c:	6963      	ldr	r3, [r4, #20]
 800082e:	b2f6      	uxtb	r6, r6
 8000830:	4283      	cmp	r3, r0
 8000832:	4637      	mov	r7, r6
 8000834:	dc04      	bgt.n	8000840 <__swbuf_r+0x3a>
 8000836:	4621      	mov	r1, r4
 8000838:	4628      	mov	r0, r5
 800083a:	f000 fd3f 	bl	80012bc <_fflush_r>
 800083e:	b9e0      	cbnz	r0, 800087a <__swbuf_r+0x74>
 8000840:	68a3      	ldr	r3, [r4, #8]
 8000842:	3b01      	subs	r3, #1
 8000844:	60a3      	str	r3, [r4, #8]
 8000846:	6823      	ldr	r3, [r4, #0]
 8000848:	1c5a      	adds	r2, r3, #1
 800084a:	6022      	str	r2, [r4, #0]
 800084c:	701e      	strb	r6, [r3, #0]
 800084e:	6962      	ldr	r2, [r4, #20]
 8000850:	1c43      	adds	r3, r0, #1
 8000852:	429a      	cmp	r2, r3
 8000854:	d004      	beq.n	8000860 <__swbuf_r+0x5a>
 8000856:	89a3      	ldrh	r3, [r4, #12]
 8000858:	07db      	lsls	r3, r3, #31
 800085a:	d506      	bpl.n	800086a <__swbuf_r+0x64>
 800085c:	2e0a      	cmp	r6, #10
 800085e:	d104      	bne.n	800086a <__swbuf_r+0x64>
 8000860:	4621      	mov	r1, r4
 8000862:	4628      	mov	r0, r5
 8000864:	f000 fd2a 	bl	80012bc <_fflush_r>
 8000868:	b938      	cbnz	r0, 800087a <__swbuf_r+0x74>
 800086a:	4638      	mov	r0, r7
 800086c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800086e:	4621      	mov	r1, r4
 8000870:	4628      	mov	r0, r5
 8000872:	f000 f805 	bl	8000880 <__swsetup_r>
 8000876:	2800      	cmp	r0, #0
 8000878:	d0d5      	beq.n	8000826 <__swbuf_r+0x20>
 800087a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800087e:	e7f4      	b.n	800086a <__swbuf_r+0x64>

08000880 <__swsetup_r>:
 8000880:	b538      	push	{r3, r4, r5, lr}
 8000882:	4b2a      	ldr	r3, [pc, #168]	; (800092c <__swsetup_r+0xac>)
 8000884:	4605      	mov	r5, r0
 8000886:	6818      	ldr	r0, [r3, #0]
 8000888:	460c      	mov	r4, r1
 800088a:	b118      	cbz	r0, 8000894 <__swsetup_r+0x14>
 800088c:	6a03      	ldr	r3, [r0, #32]
 800088e:	b90b      	cbnz	r3, 8000894 <__swsetup_r+0x14>
 8000890:	f7ff fed2 	bl	8000638 <__sinit>
 8000894:	89a3      	ldrh	r3, [r4, #12]
 8000896:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800089a:	0718      	lsls	r0, r3, #28
 800089c:	d422      	bmi.n	80008e4 <__swsetup_r+0x64>
 800089e:	06d9      	lsls	r1, r3, #27
 80008a0:	d407      	bmi.n	80008b2 <__swsetup_r+0x32>
 80008a2:	2309      	movs	r3, #9
 80008a4:	602b      	str	r3, [r5, #0]
 80008a6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80008aa:	81a3      	strh	r3, [r4, #12]
 80008ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80008b0:	e034      	b.n	800091c <__swsetup_r+0x9c>
 80008b2:	0758      	lsls	r0, r3, #29
 80008b4:	d512      	bpl.n	80008dc <__swsetup_r+0x5c>
 80008b6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008b8:	b141      	cbz	r1, 80008cc <__swsetup_r+0x4c>
 80008ba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008be:	4299      	cmp	r1, r3
 80008c0:	d002      	beq.n	80008c8 <__swsetup_r+0x48>
 80008c2:	4628      	mov	r0, r5
 80008c4:	f000 f8b0 	bl	8000a28 <_free_r>
 80008c8:	2300      	movs	r3, #0
 80008ca:	6363      	str	r3, [r4, #52]	; 0x34
 80008cc:	89a3      	ldrh	r3, [r4, #12]
 80008ce:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80008d2:	81a3      	strh	r3, [r4, #12]
 80008d4:	2300      	movs	r3, #0
 80008d6:	6063      	str	r3, [r4, #4]
 80008d8:	6923      	ldr	r3, [r4, #16]
 80008da:	6023      	str	r3, [r4, #0]
 80008dc:	89a3      	ldrh	r3, [r4, #12]
 80008de:	f043 0308 	orr.w	r3, r3, #8
 80008e2:	81a3      	strh	r3, [r4, #12]
 80008e4:	6923      	ldr	r3, [r4, #16]
 80008e6:	b94b      	cbnz	r3, 80008fc <__swsetup_r+0x7c>
 80008e8:	89a3      	ldrh	r3, [r4, #12]
 80008ea:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80008ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008f2:	d003      	beq.n	80008fc <__swsetup_r+0x7c>
 80008f4:	4621      	mov	r1, r4
 80008f6:	4628      	mov	r0, r5
 80008f8:	f000 fd2e 	bl	8001358 <__smakebuf_r>
 80008fc:	89a0      	ldrh	r0, [r4, #12]
 80008fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000902:	f010 0301 	ands.w	r3, r0, #1
 8000906:	d00a      	beq.n	800091e <__swsetup_r+0x9e>
 8000908:	2300      	movs	r3, #0
 800090a:	60a3      	str	r3, [r4, #8]
 800090c:	6963      	ldr	r3, [r4, #20]
 800090e:	425b      	negs	r3, r3
 8000910:	61a3      	str	r3, [r4, #24]
 8000912:	6923      	ldr	r3, [r4, #16]
 8000914:	b943      	cbnz	r3, 8000928 <__swsetup_r+0xa8>
 8000916:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800091a:	d1c4      	bne.n	80008a6 <__swsetup_r+0x26>
 800091c:	bd38      	pop	{r3, r4, r5, pc}
 800091e:	0781      	lsls	r1, r0, #30
 8000920:	bf58      	it	pl
 8000922:	6963      	ldrpl	r3, [r4, #20]
 8000924:	60a3      	str	r3, [r4, #8]
 8000926:	e7f4      	b.n	8000912 <__swsetup_r+0x92>
 8000928:	2000      	movs	r0, #0
 800092a:	e7f7      	b.n	800091c <__swsetup_r+0x9c>
 800092c:	20000058 	.word	0x20000058

08000930 <memset>:
 8000930:	4402      	add	r2, r0
 8000932:	4603      	mov	r3, r0
 8000934:	4293      	cmp	r3, r2
 8000936:	d100      	bne.n	800093a <memset+0xa>
 8000938:	4770      	bx	lr
 800093a:	f803 1b01 	strb.w	r1, [r3], #1
 800093e:	e7f9      	b.n	8000934 <memset+0x4>

08000940 <_close_r>:
 8000940:	b538      	push	{r3, r4, r5, lr}
 8000942:	4d06      	ldr	r5, [pc, #24]	; (800095c <_close_r+0x1c>)
 8000944:	2300      	movs	r3, #0
 8000946:	4604      	mov	r4, r0
 8000948:	4608      	mov	r0, r1
 800094a:	602b      	str	r3, [r5, #0]
 800094c:	f7ff fd57 	bl	80003fe <_close>
 8000950:	1c43      	adds	r3, r0, #1
 8000952:	d102      	bne.n	800095a <_close_r+0x1a>
 8000954:	682b      	ldr	r3, [r5, #0]
 8000956:	b103      	cbz	r3, 800095a <_close_r+0x1a>
 8000958:	6023      	str	r3, [r4, #0]
 800095a:	bd38      	pop	{r3, r4, r5, pc}
 800095c:	200001b8 	.word	0x200001b8

08000960 <_lseek_r>:
 8000960:	b538      	push	{r3, r4, r5, lr}
 8000962:	4d07      	ldr	r5, [pc, #28]	; (8000980 <_lseek_r+0x20>)
 8000964:	4604      	mov	r4, r0
 8000966:	4608      	mov	r0, r1
 8000968:	4611      	mov	r1, r2
 800096a:	2200      	movs	r2, #0
 800096c:	602a      	str	r2, [r5, #0]
 800096e:	461a      	mov	r2, r3
 8000970:	f7ff fd69 	bl	8000446 <_lseek>
 8000974:	1c43      	adds	r3, r0, #1
 8000976:	d102      	bne.n	800097e <_lseek_r+0x1e>
 8000978:	682b      	ldr	r3, [r5, #0]
 800097a:	b103      	cbz	r3, 800097e <_lseek_r+0x1e>
 800097c:	6023      	str	r3, [r4, #0]
 800097e:	bd38      	pop	{r3, r4, r5, pc}
 8000980:	200001b8 	.word	0x200001b8

08000984 <_read_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4d07      	ldr	r5, [pc, #28]	; (80009a4 <_read_r+0x20>)
 8000988:	4604      	mov	r4, r0
 800098a:	4608      	mov	r0, r1
 800098c:	4611      	mov	r1, r2
 800098e:	2200      	movs	r2, #0
 8000990:	602a      	str	r2, [r5, #0]
 8000992:	461a      	mov	r2, r3
 8000994:	f7ff fcfa 	bl	800038c <_read>
 8000998:	1c43      	adds	r3, r0, #1
 800099a:	d102      	bne.n	80009a2 <_read_r+0x1e>
 800099c:	682b      	ldr	r3, [r5, #0]
 800099e:	b103      	cbz	r3, 80009a2 <_read_r+0x1e>
 80009a0:	6023      	str	r3, [r4, #0]
 80009a2:	bd38      	pop	{r3, r4, r5, pc}
 80009a4:	200001b8 	.word	0x200001b8

080009a8 <_write_r>:
 80009a8:	b538      	push	{r3, r4, r5, lr}
 80009aa:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_write_r+0x20>)
 80009ac:	4604      	mov	r4, r0
 80009ae:	4608      	mov	r0, r1
 80009b0:	4611      	mov	r1, r2
 80009b2:	2200      	movs	r2, #0
 80009b4:	602a      	str	r2, [r5, #0]
 80009b6:	461a      	mov	r2, r3
 80009b8:	f7ff fd05 	bl	80003c6 <_write>
 80009bc:	1c43      	adds	r3, r0, #1
 80009be:	d102      	bne.n	80009c6 <_write_r+0x1e>
 80009c0:	682b      	ldr	r3, [r5, #0]
 80009c2:	b103      	cbz	r3, 80009c6 <_write_r+0x1e>
 80009c4:	6023      	str	r3, [r4, #0]
 80009c6:	bd38      	pop	{r3, r4, r5, pc}
 80009c8:	200001b8 	.word	0x200001b8

080009cc <__errno>:
 80009cc:	4b01      	ldr	r3, [pc, #4]	; (80009d4 <__errno+0x8>)
 80009ce:	6818      	ldr	r0, [r3, #0]
 80009d0:	4770      	bx	lr
 80009d2:	bf00      	nop
 80009d4:	20000058 	.word	0x20000058

080009d8 <__libc_init_array>:
 80009d8:	b570      	push	{r4, r5, r6, lr}
 80009da:	4d0d      	ldr	r5, [pc, #52]	; (8000a10 <__libc_init_array+0x38>)
 80009dc:	4c0d      	ldr	r4, [pc, #52]	; (8000a14 <__libc_init_array+0x3c>)
 80009de:	1b64      	subs	r4, r4, r5
 80009e0:	10a4      	asrs	r4, r4, #2
 80009e2:	2600      	movs	r6, #0
 80009e4:	42a6      	cmp	r6, r4
 80009e6:	d109      	bne.n	80009fc <__libc_init_array+0x24>
 80009e8:	4d0b      	ldr	r5, [pc, #44]	; (8000a18 <__libc_init_array+0x40>)
 80009ea:	4c0c      	ldr	r4, [pc, #48]	; (8000a1c <__libc_init_array+0x44>)
 80009ec:	f000 fd22 	bl	8001434 <_init>
 80009f0:	1b64      	subs	r4, r4, r5
 80009f2:	10a4      	asrs	r4, r4, #2
 80009f4:	2600      	movs	r6, #0
 80009f6:	42a6      	cmp	r6, r4
 80009f8:	d105      	bne.n	8000a06 <__libc_init_array+0x2e>
 80009fa:	bd70      	pop	{r4, r5, r6, pc}
 80009fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a00:	4798      	blx	r3
 8000a02:	3601      	adds	r6, #1
 8000a04:	e7ee      	b.n	80009e4 <__libc_init_array+0xc>
 8000a06:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0a:	4798      	blx	r3
 8000a0c:	3601      	adds	r6, #1
 8000a0e:	e7f2      	b.n	80009f6 <__libc_init_array+0x1e>
 8000a10:	080014a0 	.word	0x080014a0
 8000a14:	080014a0 	.word	0x080014a0
 8000a18:	080014a0 	.word	0x080014a0
 8000a1c:	080014a4 	.word	0x080014a4

08000a20 <__retarget_lock_init_recursive>:
 8000a20:	4770      	bx	lr

08000a22 <__retarget_lock_acquire_recursive>:
 8000a22:	4770      	bx	lr

08000a24 <__retarget_lock_release_recursive>:
 8000a24:	4770      	bx	lr
	...

08000a28 <_free_r>:
 8000a28:	b538      	push	{r3, r4, r5, lr}
 8000a2a:	4605      	mov	r5, r0
 8000a2c:	2900      	cmp	r1, #0
 8000a2e:	d041      	beq.n	8000ab4 <_free_r+0x8c>
 8000a30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a34:	1f0c      	subs	r4, r1, #4
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	bfb8      	it	lt
 8000a3a:	18e4      	addlt	r4, r4, r3
 8000a3c:	f000 f8de 	bl	8000bfc <__malloc_lock>
 8000a40:	4a1d      	ldr	r2, [pc, #116]	; (8000ab8 <_free_r+0x90>)
 8000a42:	6813      	ldr	r3, [r2, #0]
 8000a44:	b933      	cbnz	r3, 8000a54 <_free_r+0x2c>
 8000a46:	6063      	str	r3, [r4, #4]
 8000a48:	6014      	str	r4, [r2, #0]
 8000a4a:	4628      	mov	r0, r5
 8000a4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a50:	f000 b8da 	b.w	8000c08 <__malloc_unlock>
 8000a54:	42a3      	cmp	r3, r4
 8000a56:	d908      	bls.n	8000a6a <_free_r+0x42>
 8000a58:	6820      	ldr	r0, [r4, #0]
 8000a5a:	1821      	adds	r1, r4, r0
 8000a5c:	428b      	cmp	r3, r1
 8000a5e:	bf01      	itttt	eq
 8000a60:	6819      	ldreq	r1, [r3, #0]
 8000a62:	685b      	ldreq	r3, [r3, #4]
 8000a64:	1809      	addeq	r1, r1, r0
 8000a66:	6021      	streq	r1, [r4, #0]
 8000a68:	e7ed      	b.n	8000a46 <_free_r+0x1e>
 8000a6a:	461a      	mov	r2, r3
 8000a6c:	685b      	ldr	r3, [r3, #4]
 8000a6e:	b10b      	cbz	r3, 8000a74 <_free_r+0x4c>
 8000a70:	42a3      	cmp	r3, r4
 8000a72:	d9fa      	bls.n	8000a6a <_free_r+0x42>
 8000a74:	6811      	ldr	r1, [r2, #0]
 8000a76:	1850      	adds	r0, r2, r1
 8000a78:	42a0      	cmp	r0, r4
 8000a7a:	d10b      	bne.n	8000a94 <_free_r+0x6c>
 8000a7c:	6820      	ldr	r0, [r4, #0]
 8000a7e:	4401      	add	r1, r0
 8000a80:	1850      	adds	r0, r2, r1
 8000a82:	4283      	cmp	r3, r0
 8000a84:	6011      	str	r1, [r2, #0]
 8000a86:	d1e0      	bne.n	8000a4a <_free_r+0x22>
 8000a88:	6818      	ldr	r0, [r3, #0]
 8000a8a:	685b      	ldr	r3, [r3, #4]
 8000a8c:	6053      	str	r3, [r2, #4]
 8000a8e:	4408      	add	r0, r1
 8000a90:	6010      	str	r0, [r2, #0]
 8000a92:	e7da      	b.n	8000a4a <_free_r+0x22>
 8000a94:	d902      	bls.n	8000a9c <_free_r+0x74>
 8000a96:	230c      	movs	r3, #12
 8000a98:	602b      	str	r3, [r5, #0]
 8000a9a:	e7d6      	b.n	8000a4a <_free_r+0x22>
 8000a9c:	6820      	ldr	r0, [r4, #0]
 8000a9e:	1821      	adds	r1, r4, r0
 8000aa0:	428b      	cmp	r3, r1
 8000aa2:	bf04      	itt	eq
 8000aa4:	6819      	ldreq	r1, [r3, #0]
 8000aa6:	685b      	ldreq	r3, [r3, #4]
 8000aa8:	6063      	str	r3, [r4, #4]
 8000aaa:	bf04      	itt	eq
 8000aac:	1809      	addeq	r1, r1, r0
 8000aae:	6021      	streq	r1, [r4, #0]
 8000ab0:	6054      	str	r4, [r2, #4]
 8000ab2:	e7ca      	b.n	8000a4a <_free_r+0x22>
 8000ab4:	bd38      	pop	{r3, r4, r5, pc}
 8000ab6:	bf00      	nop
 8000ab8:	200001c0 	.word	0x200001c0

08000abc <sbrk_aligned>:
 8000abc:	b570      	push	{r4, r5, r6, lr}
 8000abe:	4e0e      	ldr	r6, [pc, #56]	; (8000af8 <sbrk_aligned+0x3c>)
 8000ac0:	460c      	mov	r4, r1
 8000ac2:	6831      	ldr	r1, [r6, #0]
 8000ac4:	4605      	mov	r5, r0
 8000ac6:	b911      	cbnz	r1, 8000ace <sbrk_aligned+0x12>
 8000ac8:	f000 fca4 	bl	8001414 <_sbrk_r>
 8000acc:	6030      	str	r0, [r6, #0]
 8000ace:	4621      	mov	r1, r4
 8000ad0:	4628      	mov	r0, r5
 8000ad2:	f000 fc9f 	bl	8001414 <_sbrk_r>
 8000ad6:	1c43      	adds	r3, r0, #1
 8000ad8:	d00a      	beq.n	8000af0 <sbrk_aligned+0x34>
 8000ada:	1cc4      	adds	r4, r0, #3
 8000adc:	f024 0403 	bic.w	r4, r4, #3
 8000ae0:	42a0      	cmp	r0, r4
 8000ae2:	d007      	beq.n	8000af4 <sbrk_aligned+0x38>
 8000ae4:	1a21      	subs	r1, r4, r0
 8000ae6:	4628      	mov	r0, r5
 8000ae8:	f000 fc94 	bl	8001414 <_sbrk_r>
 8000aec:	3001      	adds	r0, #1
 8000aee:	d101      	bne.n	8000af4 <sbrk_aligned+0x38>
 8000af0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000af4:	4620      	mov	r0, r4
 8000af6:	bd70      	pop	{r4, r5, r6, pc}
 8000af8:	200001c4 	.word	0x200001c4

08000afc <_malloc_r>:
 8000afc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b00:	1ccd      	adds	r5, r1, #3
 8000b02:	f025 0503 	bic.w	r5, r5, #3
 8000b06:	3508      	adds	r5, #8
 8000b08:	2d0c      	cmp	r5, #12
 8000b0a:	bf38      	it	cc
 8000b0c:	250c      	movcc	r5, #12
 8000b0e:	2d00      	cmp	r5, #0
 8000b10:	4607      	mov	r7, r0
 8000b12:	db01      	blt.n	8000b18 <_malloc_r+0x1c>
 8000b14:	42a9      	cmp	r1, r5
 8000b16:	d905      	bls.n	8000b24 <_malloc_r+0x28>
 8000b18:	230c      	movs	r3, #12
 8000b1a:	603b      	str	r3, [r7, #0]
 8000b1c:	2600      	movs	r6, #0
 8000b1e:	4630      	mov	r0, r6
 8000b20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b24:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000bf8 <_malloc_r+0xfc>
 8000b28:	f000 f868 	bl	8000bfc <__malloc_lock>
 8000b2c:	f8d8 3000 	ldr.w	r3, [r8]
 8000b30:	461c      	mov	r4, r3
 8000b32:	bb5c      	cbnz	r4, 8000b8c <_malloc_r+0x90>
 8000b34:	4629      	mov	r1, r5
 8000b36:	4638      	mov	r0, r7
 8000b38:	f7ff ffc0 	bl	8000abc <sbrk_aligned>
 8000b3c:	1c43      	adds	r3, r0, #1
 8000b3e:	4604      	mov	r4, r0
 8000b40:	d155      	bne.n	8000bee <_malloc_r+0xf2>
 8000b42:	f8d8 4000 	ldr.w	r4, [r8]
 8000b46:	4626      	mov	r6, r4
 8000b48:	2e00      	cmp	r6, #0
 8000b4a:	d145      	bne.n	8000bd8 <_malloc_r+0xdc>
 8000b4c:	2c00      	cmp	r4, #0
 8000b4e:	d048      	beq.n	8000be2 <_malloc_r+0xe6>
 8000b50:	6823      	ldr	r3, [r4, #0]
 8000b52:	4631      	mov	r1, r6
 8000b54:	4638      	mov	r0, r7
 8000b56:	eb04 0903 	add.w	r9, r4, r3
 8000b5a:	f000 fc5b 	bl	8001414 <_sbrk_r>
 8000b5e:	4581      	cmp	r9, r0
 8000b60:	d13f      	bne.n	8000be2 <_malloc_r+0xe6>
 8000b62:	6821      	ldr	r1, [r4, #0]
 8000b64:	1a6d      	subs	r5, r5, r1
 8000b66:	4629      	mov	r1, r5
 8000b68:	4638      	mov	r0, r7
 8000b6a:	f7ff ffa7 	bl	8000abc <sbrk_aligned>
 8000b6e:	3001      	adds	r0, #1
 8000b70:	d037      	beq.n	8000be2 <_malloc_r+0xe6>
 8000b72:	6823      	ldr	r3, [r4, #0]
 8000b74:	442b      	add	r3, r5
 8000b76:	6023      	str	r3, [r4, #0]
 8000b78:	f8d8 3000 	ldr.w	r3, [r8]
 8000b7c:	2b00      	cmp	r3, #0
 8000b7e:	d038      	beq.n	8000bf2 <_malloc_r+0xf6>
 8000b80:	685a      	ldr	r2, [r3, #4]
 8000b82:	42a2      	cmp	r2, r4
 8000b84:	d12b      	bne.n	8000bde <_malloc_r+0xe2>
 8000b86:	2200      	movs	r2, #0
 8000b88:	605a      	str	r2, [r3, #4]
 8000b8a:	e00f      	b.n	8000bac <_malloc_r+0xb0>
 8000b8c:	6822      	ldr	r2, [r4, #0]
 8000b8e:	1b52      	subs	r2, r2, r5
 8000b90:	d41f      	bmi.n	8000bd2 <_malloc_r+0xd6>
 8000b92:	2a0b      	cmp	r2, #11
 8000b94:	d917      	bls.n	8000bc6 <_malloc_r+0xca>
 8000b96:	1961      	adds	r1, r4, r5
 8000b98:	42a3      	cmp	r3, r4
 8000b9a:	6025      	str	r5, [r4, #0]
 8000b9c:	bf18      	it	ne
 8000b9e:	6059      	strne	r1, [r3, #4]
 8000ba0:	6863      	ldr	r3, [r4, #4]
 8000ba2:	bf08      	it	eq
 8000ba4:	f8c8 1000 	streq.w	r1, [r8]
 8000ba8:	5162      	str	r2, [r4, r5]
 8000baa:	604b      	str	r3, [r1, #4]
 8000bac:	4638      	mov	r0, r7
 8000bae:	f104 060b 	add.w	r6, r4, #11
 8000bb2:	f000 f829 	bl	8000c08 <__malloc_unlock>
 8000bb6:	f026 0607 	bic.w	r6, r6, #7
 8000bba:	1d23      	adds	r3, r4, #4
 8000bbc:	1af2      	subs	r2, r6, r3
 8000bbe:	d0ae      	beq.n	8000b1e <_malloc_r+0x22>
 8000bc0:	1b9b      	subs	r3, r3, r6
 8000bc2:	50a3      	str	r3, [r4, r2]
 8000bc4:	e7ab      	b.n	8000b1e <_malloc_r+0x22>
 8000bc6:	42a3      	cmp	r3, r4
 8000bc8:	6862      	ldr	r2, [r4, #4]
 8000bca:	d1dd      	bne.n	8000b88 <_malloc_r+0x8c>
 8000bcc:	f8c8 2000 	str.w	r2, [r8]
 8000bd0:	e7ec      	b.n	8000bac <_malloc_r+0xb0>
 8000bd2:	4623      	mov	r3, r4
 8000bd4:	6864      	ldr	r4, [r4, #4]
 8000bd6:	e7ac      	b.n	8000b32 <_malloc_r+0x36>
 8000bd8:	4634      	mov	r4, r6
 8000bda:	6876      	ldr	r6, [r6, #4]
 8000bdc:	e7b4      	b.n	8000b48 <_malloc_r+0x4c>
 8000bde:	4613      	mov	r3, r2
 8000be0:	e7cc      	b.n	8000b7c <_malloc_r+0x80>
 8000be2:	230c      	movs	r3, #12
 8000be4:	603b      	str	r3, [r7, #0]
 8000be6:	4638      	mov	r0, r7
 8000be8:	f000 f80e 	bl	8000c08 <__malloc_unlock>
 8000bec:	e797      	b.n	8000b1e <_malloc_r+0x22>
 8000bee:	6025      	str	r5, [r4, #0]
 8000bf0:	e7dc      	b.n	8000bac <_malloc_r+0xb0>
 8000bf2:	605b      	str	r3, [r3, #4]
 8000bf4:	deff      	udf	#255	; 0xff
 8000bf6:	bf00      	nop
 8000bf8:	200001c0 	.word	0x200001c0

08000bfc <__malloc_lock>:
 8000bfc:	4801      	ldr	r0, [pc, #4]	; (8000c04 <__malloc_lock+0x8>)
 8000bfe:	f7ff bf10 	b.w	8000a22 <__retarget_lock_acquire_recursive>
 8000c02:	bf00      	nop
 8000c04:	200001bc 	.word	0x200001bc

08000c08 <__malloc_unlock>:
 8000c08:	4801      	ldr	r0, [pc, #4]	; (8000c10 <__malloc_unlock+0x8>)
 8000c0a:	f7ff bf0b 	b.w	8000a24 <__retarget_lock_release_recursive>
 8000c0e:	bf00      	nop
 8000c10:	200001bc 	.word	0x200001bc

08000c14 <__sfputc_r>:
 8000c14:	6893      	ldr	r3, [r2, #8]
 8000c16:	3b01      	subs	r3, #1
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	b410      	push	{r4}
 8000c1c:	6093      	str	r3, [r2, #8]
 8000c1e:	da07      	bge.n	8000c30 <__sfputc_r+0x1c>
 8000c20:	6994      	ldr	r4, [r2, #24]
 8000c22:	42a3      	cmp	r3, r4
 8000c24:	db01      	blt.n	8000c2a <__sfputc_r+0x16>
 8000c26:	290a      	cmp	r1, #10
 8000c28:	d102      	bne.n	8000c30 <__sfputc_r+0x1c>
 8000c2a:	bc10      	pop	{r4}
 8000c2c:	f7ff bdeb 	b.w	8000806 <__swbuf_r>
 8000c30:	6813      	ldr	r3, [r2, #0]
 8000c32:	1c58      	adds	r0, r3, #1
 8000c34:	6010      	str	r0, [r2, #0]
 8000c36:	7019      	strb	r1, [r3, #0]
 8000c38:	4608      	mov	r0, r1
 8000c3a:	bc10      	pop	{r4}
 8000c3c:	4770      	bx	lr

08000c3e <__sfputs_r>:
 8000c3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c40:	4606      	mov	r6, r0
 8000c42:	460f      	mov	r7, r1
 8000c44:	4614      	mov	r4, r2
 8000c46:	18d5      	adds	r5, r2, r3
 8000c48:	42ac      	cmp	r4, r5
 8000c4a:	d101      	bne.n	8000c50 <__sfputs_r+0x12>
 8000c4c:	2000      	movs	r0, #0
 8000c4e:	e007      	b.n	8000c60 <__sfputs_r+0x22>
 8000c50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c54:	463a      	mov	r2, r7
 8000c56:	4630      	mov	r0, r6
 8000c58:	f7ff ffdc 	bl	8000c14 <__sfputc_r>
 8000c5c:	1c43      	adds	r3, r0, #1
 8000c5e:	d1f3      	bne.n	8000c48 <__sfputs_r+0xa>
 8000c60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c64 <_vfiprintf_r>:
 8000c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c68:	460d      	mov	r5, r1
 8000c6a:	b09d      	sub	sp, #116	; 0x74
 8000c6c:	4614      	mov	r4, r2
 8000c6e:	4698      	mov	r8, r3
 8000c70:	4606      	mov	r6, r0
 8000c72:	b118      	cbz	r0, 8000c7c <_vfiprintf_r+0x18>
 8000c74:	6a03      	ldr	r3, [r0, #32]
 8000c76:	b90b      	cbnz	r3, 8000c7c <_vfiprintf_r+0x18>
 8000c78:	f7ff fcde 	bl	8000638 <__sinit>
 8000c7c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c7e:	07d9      	lsls	r1, r3, #31
 8000c80:	d405      	bmi.n	8000c8e <_vfiprintf_r+0x2a>
 8000c82:	89ab      	ldrh	r3, [r5, #12]
 8000c84:	059a      	lsls	r2, r3, #22
 8000c86:	d402      	bmi.n	8000c8e <_vfiprintf_r+0x2a>
 8000c88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c8a:	f7ff feca 	bl	8000a22 <__retarget_lock_acquire_recursive>
 8000c8e:	89ab      	ldrh	r3, [r5, #12]
 8000c90:	071b      	lsls	r3, r3, #28
 8000c92:	d501      	bpl.n	8000c98 <_vfiprintf_r+0x34>
 8000c94:	692b      	ldr	r3, [r5, #16]
 8000c96:	b99b      	cbnz	r3, 8000cc0 <_vfiprintf_r+0x5c>
 8000c98:	4629      	mov	r1, r5
 8000c9a:	4630      	mov	r0, r6
 8000c9c:	f7ff fdf0 	bl	8000880 <__swsetup_r>
 8000ca0:	b170      	cbz	r0, 8000cc0 <_vfiprintf_r+0x5c>
 8000ca2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ca4:	07dc      	lsls	r4, r3, #31
 8000ca6:	d504      	bpl.n	8000cb2 <_vfiprintf_r+0x4e>
 8000ca8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cac:	b01d      	add	sp, #116	; 0x74
 8000cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cb2:	89ab      	ldrh	r3, [r5, #12]
 8000cb4:	0598      	lsls	r0, r3, #22
 8000cb6:	d4f7      	bmi.n	8000ca8 <_vfiprintf_r+0x44>
 8000cb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cba:	f7ff feb3 	bl	8000a24 <__retarget_lock_release_recursive>
 8000cbe:	e7f3      	b.n	8000ca8 <_vfiprintf_r+0x44>
 8000cc0:	2300      	movs	r3, #0
 8000cc2:	9309      	str	r3, [sp, #36]	; 0x24
 8000cc4:	2320      	movs	r3, #32
 8000cc6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cca:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cce:	2330      	movs	r3, #48	; 0x30
 8000cd0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000e84 <_vfiprintf_r+0x220>
 8000cd4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cd8:	f04f 0901 	mov.w	r9, #1
 8000cdc:	4623      	mov	r3, r4
 8000cde:	469a      	mov	sl, r3
 8000ce0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ce4:	b10a      	cbz	r2, 8000cea <_vfiprintf_r+0x86>
 8000ce6:	2a25      	cmp	r2, #37	; 0x25
 8000ce8:	d1f9      	bne.n	8000cde <_vfiprintf_r+0x7a>
 8000cea:	ebba 0b04 	subs.w	fp, sl, r4
 8000cee:	d00b      	beq.n	8000d08 <_vfiprintf_r+0xa4>
 8000cf0:	465b      	mov	r3, fp
 8000cf2:	4622      	mov	r2, r4
 8000cf4:	4629      	mov	r1, r5
 8000cf6:	4630      	mov	r0, r6
 8000cf8:	f7ff ffa1 	bl	8000c3e <__sfputs_r>
 8000cfc:	3001      	adds	r0, #1
 8000cfe:	f000 80a9 	beq.w	8000e54 <_vfiprintf_r+0x1f0>
 8000d02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d04:	445a      	add	r2, fp
 8000d06:	9209      	str	r2, [sp, #36]	; 0x24
 8000d08:	f89a 3000 	ldrb.w	r3, [sl]
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	f000 80a1 	beq.w	8000e54 <_vfiprintf_r+0x1f0>
 8000d12:	2300      	movs	r3, #0
 8000d14:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000d18:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d1c:	f10a 0a01 	add.w	sl, sl, #1
 8000d20:	9304      	str	r3, [sp, #16]
 8000d22:	9307      	str	r3, [sp, #28]
 8000d24:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d28:	931a      	str	r3, [sp, #104]	; 0x68
 8000d2a:	4654      	mov	r4, sl
 8000d2c:	2205      	movs	r2, #5
 8000d2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d32:	4854      	ldr	r0, [pc, #336]	; (8000e84 <_vfiprintf_r+0x220>)
 8000d34:	f7ff fa6c 	bl	8000210 <memchr>
 8000d38:	9a04      	ldr	r2, [sp, #16]
 8000d3a:	b9d8      	cbnz	r0, 8000d74 <_vfiprintf_r+0x110>
 8000d3c:	06d1      	lsls	r1, r2, #27
 8000d3e:	bf44      	itt	mi
 8000d40:	2320      	movmi	r3, #32
 8000d42:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d46:	0713      	lsls	r3, r2, #28
 8000d48:	bf44      	itt	mi
 8000d4a:	232b      	movmi	r3, #43	; 0x2b
 8000d4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d50:	f89a 3000 	ldrb.w	r3, [sl]
 8000d54:	2b2a      	cmp	r3, #42	; 0x2a
 8000d56:	d015      	beq.n	8000d84 <_vfiprintf_r+0x120>
 8000d58:	9a07      	ldr	r2, [sp, #28]
 8000d5a:	4654      	mov	r4, sl
 8000d5c:	2000      	movs	r0, #0
 8000d5e:	f04f 0c0a 	mov.w	ip, #10
 8000d62:	4621      	mov	r1, r4
 8000d64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d68:	3b30      	subs	r3, #48	; 0x30
 8000d6a:	2b09      	cmp	r3, #9
 8000d6c:	d94d      	bls.n	8000e0a <_vfiprintf_r+0x1a6>
 8000d6e:	b1b0      	cbz	r0, 8000d9e <_vfiprintf_r+0x13a>
 8000d70:	9207      	str	r2, [sp, #28]
 8000d72:	e014      	b.n	8000d9e <_vfiprintf_r+0x13a>
 8000d74:	eba0 0308 	sub.w	r3, r0, r8
 8000d78:	fa09 f303 	lsl.w	r3, r9, r3
 8000d7c:	4313      	orrs	r3, r2
 8000d7e:	9304      	str	r3, [sp, #16]
 8000d80:	46a2      	mov	sl, r4
 8000d82:	e7d2      	b.n	8000d2a <_vfiprintf_r+0xc6>
 8000d84:	9b03      	ldr	r3, [sp, #12]
 8000d86:	1d19      	adds	r1, r3, #4
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	9103      	str	r1, [sp, #12]
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	bfbb      	ittet	lt
 8000d90:	425b      	neglt	r3, r3
 8000d92:	f042 0202 	orrlt.w	r2, r2, #2
 8000d96:	9307      	strge	r3, [sp, #28]
 8000d98:	9307      	strlt	r3, [sp, #28]
 8000d9a:	bfb8      	it	lt
 8000d9c:	9204      	strlt	r2, [sp, #16]
 8000d9e:	7823      	ldrb	r3, [r4, #0]
 8000da0:	2b2e      	cmp	r3, #46	; 0x2e
 8000da2:	d10c      	bne.n	8000dbe <_vfiprintf_r+0x15a>
 8000da4:	7863      	ldrb	r3, [r4, #1]
 8000da6:	2b2a      	cmp	r3, #42	; 0x2a
 8000da8:	d134      	bne.n	8000e14 <_vfiprintf_r+0x1b0>
 8000daa:	9b03      	ldr	r3, [sp, #12]
 8000dac:	1d1a      	adds	r2, r3, #4
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	9203      	str	r2, [sp, #12]
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	bfb8      	it	lt
 8000db6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000dba:	3402      	adds	r4, #2
 8000dbc:	9305      	str	r3, [sp, #20]
 8000dbe:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000e88 <_vfiprintf_r+0x224>
 8000dc2:	7821      	ldrb	r1, [r4, #0]
 8000dc4:	2203      	movs	r2, #3
 8000dc6:	4650      	mov	r0, sl
 8000dc8:	f7ff fa22 	bl	8000210 <memchr>
 8000dcc:	b138      	cbz	r0, 8000dde <_vfiprintf_r+0x17a>
 8000dce:	9b04      	ldr	r3, [sp, #16]
 8000dd0:	eba0 000a 	sub.w	r0, r0, sl
 8000dd4:	2240      	movs	r2, #64	; 0x40
 8000dd6:	4082      	lsls	r2, r0
 8000dd8:	4313      	orrs	r3, r2
 8000dda:	3401      	adds	r4, #1
 8000ddc:	9304      	str	r3, [sp, #16]
 8000dde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000de2:	482a      	ldr	r0, [pc, #168]	; (8000e8c <_vfiprintf_r+0x228>)
 8000de4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000de8:	2206      	movs	r2, #6
 8000dea:	f7ff fa11 	bl	8000210 <memchr>
 8000dee:	2800      	cmp	r0, #0
 8000df0:	d03f      	beq.n	8000e72 <_vfiprintf_r+0x20e>
 8000df2:	4b27      	ldr	r3, [pc, #156]	; (8000e90 <_vfiprintf_r+0x22c>)
 8000df4:	bb1b      	cbnz	r3, 8000e3e <_vfiprintf_r+0x1da>
 8000df6:	9b03      	ldr	r3, [sp, #12]
 8000df8:	3307      	adds	r3, #7
 8000dfa:	f023 0307 	bic.w	r3, r3, #7
 8000dfe:	3308      	adds	r3, #8
 8000e00:	9303      	str	r3, [sp, #12]
 8000e02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e04:	443b      	add	r3, r7
 8000e06:	9309      	str	r3, [sp, #36]	; 0x24
 8000e08:	e768      	b.n	8000cdc <_vfiprintf_r+0x78>
 8000e0a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e0e:	460c      	mov	r4, r1
 8000e10:	2001      	movs	r0, #1
 8000e12:	e7a6      	b.n	8000d62 <_vfiprintf_r+0xfe>
 8000e14:	2300      	movs	r3, #0
 8000e16:	3401      	adds	r4, #1
 8000e18:	9305      	str	r3, [sp, #20]
 8000e1a:	4619      	mov	r1, r3
 8000e1c:	f04f 0c0a 	mov.w	ip, #10
 8000e20:	4620      	mov	r0, r4
 8000e22:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e26:	3a30      	subs	r2, #48	; 0x30
 8000e28:	2a09      	cmp	r2, #9
 8000e2a:	d903      	bls.n	8000e34 <_vfiprintf_r+0x1d0>
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d0c6      	beq.n	8000dbe <_vfiprintf_r+0x15a>
 8000e30:	9105      	str	r1, [sp, #20]
 8000e32:	e7c4      	b.n	8000dbe <_vfiprintf_r+0x15a>
 8000e34:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e38:	4604      	mov	r4, r0
 8000e3a:	2301      	movs	r3, #1
 8000e3c:	e7f0      	b.n	8000e20 <_vfiprintf_r+0x1bc>
 8000e3e:	ab03      	add	r3, sp, #12
 8000e40:	9300      	str	r3, [sp, #0]
 8000e42:	462a      	mov	r2, r5
 8000e44:	4b13      	ldr	r3, [pc, #76]	; (8000e94 <_vfiprintf_r+0x230>)
 8000e46:	a904      	add	r1, sp, #16
 8000e48:	4630      	mov	r0, r6
 8000e4a:	f3af 8000 	nop.w
 8000e4e:	4607      	mov	r7, r0
 8000e50:	1c78      	adds	r0, r7, #1
 8000e52:	d1d6      	bne.n	8000e02 <_vfiprintf_r+0x19e>
 8000e54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e56:	07d9      	lsls	r1, r3, #31
 8000e58:	d405      	bmi.n	8000e66 <_vfiprintf_r+0x202>
 8000e5a:	89ab      	ldrh	r3, [r5, #12]
 8000e5c:	059a      	lsls	r2, r3, #22
 8000e5e:	d402      	bmi.n	8000e66 <_vfiprintf_r+0x202>
 8000e60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e62:	f7ff fddf 	bl	8000a24 <__retarget_lock_release_recursive>
 8000e66:	89ab      	ldrh	r3, [r5, #12]
 8000e68:	065b      	lsls	r3, r3, #25
 8000e6a:	f53f af1d 	bmi.w	8000ca8 <_vfiprintf_r+0x44>
 8000e6e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e70:	e71c      	b.n	8000cac <_vfiprintf_r+0x48>
 8000e72:	ab03      	add	r3, sp, #12
 8000e74:	9300      	str	r3, [sp, #0]
 8000e76:	462a      	mov	r2, r5
 8000e78:	4b06      	ldr	r3, [pc, #24]	; (8000e94 <_vfiprintf_r+0x230>)
 8000e7a:	a904      	add	r1, sp, #16
 8000e7c:	4630      	mov	r0, r6
 8000e7e:	f000 f879 	bl	8000f74 <_printf_i>
 8000e82:	e7e4      	b.n	8000e4e <_vfiprintf_r+0x1ea>
 8000e84:	0800146b 	.word	0x0800146b
 8000e88:	08001471 	.word	0x08001471
 8000e8c:	08001475 	.word	0x08001475
 8000e90:	00000000 	.word	0x00000000
 8000e94:	08000c3f 	.word	0x08000c3f

08000e98 <_printf_common>:
 8000e98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e9c:	4616      	mov	r6, r2
 8000e9e:	4699      	mov	r9, r3
 8000ea0:	688a      	ldr	r2, [r1, #8]
 8000ea2:	690b      	ldr	r3, [r1, #16]
 8000ea4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ea8:	4293      	cmp	r3, r2
 8000eaa:	bfb8      	it	lt
 8000eac:	4613      	movlt	r3, r2
 8000eae:	6033      	str	r3, [r6, #0]
 8000eb0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000eb4:	4607      	mov	r7, r0
 8000eb6:	460c      	mov	r4, r1
 8000eb8:	b10a      	cbz	r2, 8000ebe <_printf_common+0x26>
 8000eba:	3301      	adds	r3, #1
 8000ebc:	6033      	str	r3, [r6, #0]
 8000ebe:	6823      	ldr	r3, [r4, #0]
 8000ec0:	0699      	lsls	r1, r3, #26
 8000ec2:	bf42      	ittt	mi
 8000ec4:	6833      	ldrmi	r3, [r6, #0]
 8000ec6:	3302      	addmi	r3, #2
 8000ec8:	6033      	strmi	r3, [r6, #0]
 8000eca:	6825      	ldr	r5, [r4, #0]
 8000ecc:	f015 0506 	ands.w	r5, r5, #6
 8000ed0:	d106      	bne.n	8000ee0 <_printf_common+0x48>
 8000ed2:	f104 0a19 	add.w	sl, r4, #25
 8000ed6:	68e3      	ldr	r3, [r4, #12]
 8000ed8:	6832      	ldr	r2, [r6, #0]
 8000eda:	1a9b      	subs	r3, r3, r2
 8000edc:	42ab      	cmp	r3, r5
 8000ede:	dc26      	bgt.n	8000f2e <_printf_common+0x96>
 8000ee0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ee4:	1e13      	subs	r3, r2, #0
 8000ee6:	6822      	ldr	r2, [r4, #0]
 8000ee8:	bf18      	it	ne
 8000eea:	2301      	movne	r3, #1
 8000eec:	0692      	lsls	r2, r2, #26
 8000eee:	d42b      	bmi.n	8000f48 <_printf_common+0xb0>
 8000ef0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ef4:	4649      	mov	r1, r9
 8000ef6:	4638      	mov	r0, r7
 8000ef8:	47c0      	blx	r8
 8000efa:	3001      	adds	r0, #1
 8000efc:	d01e      	beq.n	8000f3c <_printf_common+0xa4>
 8000efe:	6823      	ldr	r3, [r4, #0]
 8000f00:	6922      	ldr	r2, [r4, #16]
 8000f02:	f003 0306 	and.w	r3, r3, #6
 8000f06:	2b04      	cmp	r3, #4
 8000f08:	bf02      	ittt	eq
 8000f0a:	68e5      	ldreq	r5, [r4, #12]
 8000f0c:	6833      	ldreq	r3, [r6, #0]
 8000f0e:	1aed      	subeq	r5, r5, r3
 8000f10:	68a3      	ldr	r3, [r4, #8]
 8000f12:	bf0c      	ite	eq
 8000f14:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f18:	2500      	movne	r5, #0
 8000f1a:	4293      	cmp	r3, r2
 8000f1c:	bfc4      	itt	gt
 8000f1e:	1a9b      	subgt	r3, r3, r2
 8000f20:	18ed      	addgt	r5, r5, r3
 8000f22:	2600      	movs	r6, #0
 8000f24:	341a      	adds	r4, #26
 8000f26:	42b5      	cmp	r5, r6
 8000f28:	d11a      	bne.n	8000f60 <_printf_common+0xc8>
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	e008      	b.n	8000f40 <_printf_common+0xa8>
 8000f2e:	2301      	movs	r3, #1
 8000f30:	4652      	mov	r2, sl
 8000f32:	4649      	mov	r1, r9
 8000f34:	4638      	mov	r0, r7
 8000f36:	47c0      	blx	r8
 8000f38:	3001      	adds	r0, #1
 8000f3a:	d103      	bne.n	8000f44 <_printf_common+0xac>
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f44:	3501      	adds	r5, #1
 8000f46:	e7c6      	b.n	8000ed6 <_printf_common+0x3e>
 8000f48:	18e1      	adds	r1, r4, r3
 8000f4a:	1c5a      	adds	r2, r3, #1
 8000f4c:	2030      	movs	r0, #48	; 0x30
 8000f4e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f52:	4422      	add	r2, r4
 8000f54:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f58:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f5c:	3302      	adds	r3, #2
 8000f5e:	e7c7      	b.n	8000ef0 <_printf_common+0x58>
 8000f60:	2301      	movs	r3, #1
 8000f62:	4622      	mov	r2, r4
 8000f64:	4649      	mov	r1, r9
 8000f66:	4638      	mov	r0, r7
 8000f68:	47c0      	blx	r8
 8000f6a:	3001      	adds	r0, #1
 8000f6c:	d0e6      	beq.n	8000f3c <_printf_common+0xa4>
 8000f6e:	3601      	adds	r6, #1
 8000f70:	e7d9      	b.n	8000f26 <_printf_common+0x8e>
	...

08000f74 <_printf_i>:
 8000f74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f78:	7e0f      	ldrb	r7, [r1, #24]
 8000f7a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f7c:	2f78      	cmp	r7, #120	; 0x78
 8000f7e:	4691      	mov	r9, r2
 8000f80:	4680      	mov	r8, r0
 8000f82:	460c      	mov	r4, r1
 8000f84:	469a      	mov	sl, r3
 8000f86:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f8a:	d807      	bhi.n	8000f9c <_printf_i+0x28>
 8000f8c:	2f62      	cmp	r7, #98	; 0x62
 8000f8e:	d80a      	bhi.n	8000fa6 <_printf_i+0x32>
 8000f90:	2f00      	cmp	r7, #0
 8000f92:	f000 80d4 	beq.w	800113e <_printf_i+0x1ca>
 8000f96:	2f58      	cmp	r7, #88	; 0x58
 8000f98:	f000 80c0 	beq.w	800111c <_printf_i+0x1a8>
 8000f9c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fa0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fa4:	e03a      	b.n	800101c <_printf_i+0xa8>
 8000fa6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000faa:	2b15      	cmp	r3, #21
 8000fac:	d8f6      	bhi.n	8000f9c <_printf_i+0x28>
 8000fae:	a101      	add	r1, pc, #4	; (adr r1, 8000fb4 <_printf_i+0x40>)
 8000fb0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fb4:	0800100d 	.word	0x0800100d
 8000fb8:	08001021 	.word	0x08001021
 8000fbc:	08000f9d 	.word	0x08000f9d
 8000fc0:	08000f9d 	.word	0x08000f9d
 8000fc4:	08000f9d 	.word	0x08000f9d
 8000fc8:	08000f9d 	.word	0x08000f9d
 8000fcc:	08001021 	.word	0x08001021
 8000fd0:	08000f9d 	.word	0x08000f9d
 8000fd4:	08000f9d 	.word	0x08000f9d
 8000fd8:	08000f9d 	.word	0x08000f9d
 8000fdc:	08000f9d 	.word	0x08000f9d
 8000fe0:	08001125 	.word	0x08001125
 8000fe4:	0800104d 	.word	0x0800104d
 8000fe8:	080010df 	.word	0x080010df
 8000fec:	08000f9d 	.word	0x08000f9d
 8000ff0:	08000f9d 	.word	0x08000f9d
 8000ff4:	08001147 	.word	0x08001147
 8000ff8:	08000f9d 	.word	0x08000f9d
 8000ffc:	0800104d 	.word	0x0800104d
 8001000:	08000f9d 	.word	0x08000f9d
 8001004:	08000f9d 	.word	0x08000f9d
 8001008:	080010e7 	.word	0x080010e7
 800100c:	682b      	ldr	r3, [r5, #0]
 800100e:	1d1a      	adds	r2, r3, #4
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	602a      	str	r2, [r5, #0]
 8001014:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001018:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800101c:	2301      	movs	r3, #1
 800101e:	e09f      	b.n	8001160 <_printf_i+0x1ec>
 8001020:	6820      	ldr	r0, [r4, #0]
 8001022:	682b      	ldr	r3, [r5, #0]
 8001024:	0607      	lsls	r7, r0, #24
 8001026:	f103 0104 	add.w	r1, r3, #4
 800102a:	6029      	str	r1, [r5, #0]
 800102c:	d501      	bpl.n	8001032 <_printf_i+0xbe>
 800102e:	681e      	ldr	r6, [r3, #0]
 8001030:	e003      	b.n	800103a <_printf_i+0xc6>
 8001032:	0646      	lsls	r6, r0, #25
 8001034:	d5fb      	bpl.n	800102e <_printf_i+0xba>
 8001036:	f9b3 6000 	ldrsh.w	r6, [r3]
 800103a:	2e00      	cmp	r6, #0
 800103c:	da03      	bge.n	8001046 <_printf_i+0xd2>
 800103e:	232d      	movs	r3, #45	; 0x2d
 8001040:	4276      	negs	r6, r6
 8001042:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001046:	485a      	ldr	r0, [pc, #360]	; (80011b0 <_printf_i+0x23c>)
 8001048:	230a      	movs	r3, #10
 800104a:	e012      	b.n	8001072 <_printf_i+0xfe>
 800104c:	682b      	ldr	r3, [r5, #0]
 800104e:	6820      	ldr	r0, [r4, #0]
 8001050:	1d19      	adds	r1, r3, #4
 8001052:	6029      	str	r1, [r5, #0]
 8001054:	0605      	lsls	r5, r0, #24
 8001056:	d501      	bpl.n	800105c <_printf_i+0xe8>
 8001058:	681e      	ldr	r6, [r3, #0]
 800105a:	e002      	b.n	8001062 <_printf_i+0xee>
 800105c:	0641      	lsls	r1, r0, #25
 800105e:	d5fb      	bpl.n	8001058 <_printf_i+0xe4>
 8001060:	881e      	ldrh	r6, [r3, #0]
 8001062:	4853      	ldr	r0, [pc, #332]	; (80011b0 <_printf_i+0x23c>)
 8001064:	2f6f      	cmp	r7, #111	; 0x6f
 8001066:	bf0c      	ite	eq
 8001068:	2308      	moveq	r3, #8
 800106a:	230a      	movne	r3, #10
 800106c:	2100      	movs	r1, #0
 800106e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001072:	6865      	ldr	r5, [r4, #4]
 8001074:	60a5      	str	r5, [r4, #8]
 8001076:	2d00      	cmp	r5, #0
 8001078:	bfa2      	ittt	ge
 800107a:	6821      	ldrge	r1, [r4, #0]
 800107c:	f021 0104 	bicge.w	r1, r1, #4
 8001080:	6021      	strge	r1, [r4, #0]
 8001082:	b90e      	cbnz	r6, 8001088 <_printf_i+0x114>
 8001084:	2d00      	cmp	r5, #0
 8001086:	d04b      	beq.n	8001120 <_printf_i+0x1ac>
 8001088:	4615      	mov	r5, r2
 800108a:	fbb6 f1f3 	udiv	r1, r6, r3
 800108e:	fb03 6711 	mls	r7, r3, r1, r6
 8001092:	5dc7      	ldrb	r7, [r0, r7]
 8001094:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001098:	4637      	mov	r7, r6
 800109a:	42bb      	cmp	r3, r7
 800109c:	460e      	mov	r6, r1
 800109e:	d9f4      	bls.n	800108a <_printf_i+0x116>
 80010a0:	2b08      	cmp	r3, #8
 80010a2:	d10b      	bne.n	80010bc <_printf_i+0x148>
 80010a4:	6823      	ldr	r3, [r4, #0]
 80010a6:	07de      	lsls	r6, r3, #31
 80010a8:	d508      	bpl.n	80010bc <_printf_i+0x148>
 80010aa:	6923      	ldr	r3, [r4, #16]
 80010ac:	6861      	ldr	r1, [r4, #4]
 80010ae:	4299      	cmp	r1, r3
 80010b0:	bfde      	ittt	le
 80010b2:	2330      	movle	r3, #48	; 0x30
 80010b4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010b8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80010bc:	1b52      	subs	r2, r2, r5
 80010be:	6122      	str	r2, [r4, #16]
 80010c0:	f8cd a000 	str.w	sl, [sp]
 80010c4:	464b      	mov	r3, r9
 80010c6:	aa03      	add	r2, sp, #12
 80010c8:	4621      	mov	r1, r4
 80010ca:	4640      	mov	r0, r8
 80010cc:	f7ff fee4 	bl	8000e98 <_printf_common>
 80010d0:	3001      	adds	r0, #1
 80010d2:	d14a      	bne.n	800116a <_printf_i+0x1f6>
 80010d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010d8:	b004      	add	sp, #16
 80010da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010de:	6823      	ldr	r3, [r4, #0]
 80010e0:	f043 0320 	orr.w	r3, r3, #32
 80010e4:	6023      	str	r3, [r4, #0]
 80010e6:	4833      	ldr	r0, [pc, #204]	; (80011b4 <_printf_i+0x240>)
 80010e8:	2778      	movs	r7, #120	; 0x78
 80010ea:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80010ee:	6823      	ldr	r3, [r4, #0]
 80010f0:	6829      	ldr	r1, [r5, #0]
 80010f2:	061f      	lsls	r7, r3, #24
 80010f4:	f851 6b04 	ldr.w	r6, [r1], #4
 80010f8:	d402      	bmi.n	8001100 <_printf_i+0x18c>
 80010fa:	065f      	lsls	r7, r3, #25
 80010fc:	bf48      	it	mi
 80010fe:	b2b6      	uxthmi	r6, r6
 8001100:	07df      	lsls	r7, r3, #31
 8001102:	bf48      	it	mi
 8001104:	f043 0320 	orrmi.w	r3, r3, #32
 8001108:	6029      	str	r1, [r5, #0]
 800110a:	bf48      	it	mi
 800110c:	6023      	strmi	r3, [r4, #0]
 800110e:	b91e      	cbnz	r6, 8001118 <_printf_i+0x1a4>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	f023 0320 	bic.w	r3, r3, #32
 8001116:	6023      	str	r3, [r4, #0]
 8001118:	2310      	movs	r3, #16
 800111a:	e7a7      	b.n	800106c <_printf_i+0xf8>
 800111c:	4824      	ldr	r0, [pc, #144]	; (80011b0 <_printf_i+0x23c>)
 800111e:	e7e4      	b.n	80010ea <_printf_i+0x176>
 8001120:	4615      	mov	r5, r2
 8001122:	e7bd      	b.n	80010a0 <_printf_i+0x12c>
 8001124:	682b      	ldr	r3, [r5, #0]
 8001126:	6826      	ldr	r6, [r4, #0]
 8001128:	6961      	ldr	r1, [r4, #20]
 800112a:	1d18      	adds	r0, r3, #4
 800112c:	6028      	str	r0, [r5, #0]
 800112e:	0635      	lsls	r5, r6, #24
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	d501      	bpl.n	8001138 <_printf_i+0x1c4>
 8001134:	6019      	str	r1, [r3, #0]
 8001136:	e002      	b.n	800113e <_printf_i+0x1ca>
 8001138:	0670      	lsls	r0, r6, #25
 800113a:	d5fb      	bpl.n	8001134 <_printf_i+0x1c0>
 800113c:	8019      	strh	r1, [r3, #0]
 800113e:	2300      	movs	r3, #0
 8001140:	6123      	str	r3, [r4, #16]
 8001142:	4615      	mov	r5, r2
 8001144:	e7bc      	b.n	80010c0 <_printf_i+0x14c>
 8001146:	682b      	ldr	r3, [r5, #0]
 8001148:	1d1a      	adds	r2, r3, #4
 800114a:	602a      	str	r2, [r5, #0]
 800114c:	681d      	ldr	r5, [r3, #0]
 800114e:	6862      	ldr	r2, [r4, #4]
 8001150:	2100      	movs	r1, #0
 8001152:	4628      	mov	r0, r5
 8001154:	f7ff f85c 	bl	8000210 <memchr>
 8001158:	b108      	cbz	r0, 800115e <_printf_i+0x1ea>
 800115a:	1b40      	subs	r0, r0, r5
 800115c:	6060      	str	r0, [r4, #4]
 800115e:	6863      	ldr	r3, [r4, #4]
 8001160:	6123      	str	r3, [r4, #16]
 8001162:	2300      	movs	r3, #0
 8001164:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001168:	e7aa      	b.n	80010c0 <_printf_i+0x14c>
 800116a:	6923      	ldr	r3, [r4, #16]
 800116c:	462a      	mov	r2, r5
 800116e:	4649      	mov	r1, r9
 8001170:	4640      	mov	r0, r8
 8001172:	47d0      	blx	sl
 8001174:	3001      	adds	r0, #1
 8001176:	d0ad      	beq.n	80010d4 <_printf_i+0x160>
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	079b      	lsls	r3, r3, #30
 800117c:	d413      	bmi.n	80011a6 <_printf_i+0x232>
 800117e:	68e0      	ldr	r0, [r4, #12]
 8001180:	9b03      	ldr	r3, [sp, #12]
 8001182:	4298      	cmp	r0, r3
 8001184:	bfb8      	it	lt
 8001186:	4618      	movlt	r0, r3
 8001188:	e7a6      	b.n	80010d8 <_printf_i+0x164>
 800118a:	2301      	movs	r3, #1
 800118c:	4632      	mov	r2, r6
 800118e:	4649      	mov	r1, r9
 8001190:	4640      	mov	r0, r8
 8001192:	47d0      	blx	sl
 8001194:	3001      	adds	r0, #1
 8001196:	d09d      	beq.n	80010d4 <_printf_i+0x160>
 8001198:	3501      	adds	r5, #1
 800119a:	68e3      	ldr	r3, [r4, #12]
 800119c:	9903      	ldr	r1, [sp, #12]
 800119e:	1a5b      	subs	r3, r3, r1
 80011a0:	42ab      	cmp	r3, r5
 80011a2:	dcf2      	bgt.n	800118a <_printf_i+0x216>
 80011a4:	e7eb      	b.n	800117e <_printf_i+0x20a>
 80011a6:	2500      	movs	r5, #0
 80011a8:	f104 0619 	add.w	r6, r4, #25
 80011ac:	e7f5      	b.n	800119a <_printf_i+0x226>
 80011ae:	bf00      	nop
 80011b0:	0800147c 	.word	0x0800147c
 80011b4:	0800148d 	.word	0x0800148d

080011b8 <__sflush_r>:
 80011b8:	898a      	ldrh	r2, [r1, #12]
 80011ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011bc:	4605      	mov	r5, r0
 80011be:	0710      	lsls	r0, r2, #28
 80011c0:	460c      	mov	r4, r1
 80011c2:	d457      	bmi.n	8001274 <__sflush_r+0xbc>
 80011c4:	684b      	ldr	r3, [r1, #4]
 80011c6:	2b00      	cmp	r3, #0
 80011c8:	dc04      	bgt.n	80011d4 <__sflush_r+0x1c>
 80011ca:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	dc01      	bgt.n	80011d4 <__sflush_r+0x1c>
 80011d0:	2000      	movs	r0, #0
 80011d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011d4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011d6:	2e00      	cmp	r6, #0
 80011d8:	d0fa      	beq.n	80011d0 <__sflush_r+0x18>
 80011da:	2300      	movs	r3, #0
 80011dc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011e0:	682f      	ldr	r7, [r5, #0]
 80011e2:	6a21      	ldr	r1, [r4, #32]
 80011e4:	602b      	str	r3, [r5, #0]
 80011e6:	d032      	beq.n	800124e <__sflush_r+0x96>
 80011e8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011ea:	89a3      	ldrh	r3, [r4, #12]
 80011ec:	075a      	lsls	r2, r3, #29
 80011ee:	d505      	bpl.n	80011fc <__sflush_r+0x44>
 80011f0:	6863      	ldr	r3, [r4, #4]
 80011f2:	1ac0      	subs	r0, r0, r3
 80011f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011f6:	b10b      	cbz	r3, 80011fc <__sflush_r+0x44>
 80011f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011fa:	1ac0      	subs	r0, r0, r3
 80011fc:	2300      	movs	r3, #0
 80011fe:	4602      	mov	r2, r0
 8001200:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001202:	6a21      	ldr	r1, [r4, #32]
 8001204:	4628      	mov	r0, r5
 8001206:	47b0      	blx	r6
 8001208:	1c43      	adds	r3, r0, #1
 800120a:	89a3      	ldrh	r3, [r4, #12]
 800120c:	d106      	bne.n	800121c <__sflush_r+0x64>
 800120e:	6829      	ldr	r1, [r5, #0]
 8001210:	291d      	cmp	r1, #29
 8001212:	d82b      	bhi.n	800126c <__sflush_r+0xb4>
 8001214:	4a28      	ldr	r2, [pc, #160]	; (80012b8 <__sflush_r+0x100>)
 8001216:	410a      	asrs	r2, r1
 8001218:	07d6      	lsls	r6, r2, #31
 800121a:	d427      	bmi.n	800126c <__sflush_r+0xb4>
 800121c:	2200      	movs	r2, #0
 800121e:	6062      	str	r2, [r4, #4]
 8001220:	04d9      	lsls	r1, r3, #19
 8001222:	6922      	ldr	r2, [r4, #16]
 8001224:	6022      	str	r2, [r4, #0]
 8001226:	d504      	bpl.n	8001232 <__sflush_r+0x7a>
 8001228:	1c42      	adds	r2, r0, #1
 800122a:	d101      	bne.n	8001230 <__sflush_r+0x78>
 800122c:	682b      	ldr	r3, [r5, #0]
 800122e:	b903      	cbnz	r3, 8001232 <__sflush_r+0x7a>
 8001230:	6560      	str	r0, [r4, #84]	; 0x54
 8001232:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001234:	602f      	str	r7, [r5, #0]
 8001236:	2900      	cmp	r1, #0
 8001238:	d0ca      	beq.n	80011d0 <__sflush_r+0x18>
 800123a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800123e:	4299      	cmp	r1, r3
 8001240:	d002      	beq.n	8001248 <__sflush_r+0x90>
 8001242:	4628      	mov	r0, r5
 8001244:	f7ff fbf0 	bl	8000a28 <_free_r>
 8001248:	2000      	movs	r0, #0
 800124a:	6360      	str	r0, [r4, #52]	; 0x34
 800124c:	e7c1      	b.n	80011d2 <__sflush_r+0x1a>
 800124e:	2301      	movs	r3, #1
 8001250:	4628      	mov	r0, r5
 8001252:	47b0      	blx	r6
 8001254:	1c41      	adds	r1, r0, #1
 8001256:	d1c8      	bne.n	80011ea <__sflush_r+0x32>
 8001258:	682b      	ldr	r3, [r5, #0]
 800125a:	2b00      	cmp	r3, #0
 800125c:	d0c5      	beq.n	80011ea <__sflush_r+0x32>
 800125e:	2b1d      	cmp	r3, #29
 8001260:	d001      	beq.n	8001266 <__sflush_r+0xae>
 8001262:	2b16      	cmp	r3, #22
 8001264:	d101      	bne.n	800126a <__sflush_r+0xb2>
 8001266:	602f      	str	r7, [r5, #0]
 8001268:	e7b2      	b.n	80011d0 <__sflush_r+0x18>
 800126a:	89a3      	ldrh	r3, [r4, #12]
 800126c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001270:	81a3      	strh	r3, [r4, #12]
 8001272:	e7ae      	b.n	80011d2 <__sflush_r+0x1a>
 8001274:	690f      	ldr	r7, [r1, #16]
 8001276:	2f00      	cmp	r7, #0
 8001278:	d0aa      	beq.n	80011d0 <__sflush_r+0x18>
 800127a:	0793      	lsls	r3, r2, #30
 800127c:	680e      	ldr	r6, [r1, #0]
 800127e:	bf08      	it	eq
 8001280:	694b      	ldreq	r3, [r1, #20]
 8001282:	600f      	str	r7, [r1, #0]
 8001284:	bf18      	it	ne
 8001286:	2300      	movne	r3, #0
 8001288:	1bf6      	subs	r6, r6, r7
 800128a:	608b      	str	r3, [r1, #8]
 800128c:	2e00      	cmp	r6, #0
 800128e:	dd9f      	ble.n	80011d0 <__sflush_r+0x18>
 8001290:	6a21      	ldr	r1, [r4, #32]
 8001292:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001296:	4633      	mov	r3, r6
 8001298:	463a      	mov	r2, r7
 800129a:	4628      	mov	r0, r5
 800129c:	47e0      	blx	ip
 800129e:	2800      	cmp	r0, #0
 80012a0:	dc06      	bgt.n	80012b0 <__sflush_r+0xf8>
 80012a2:	89a3      	ldrh	r3, [r4, #12]
 80012a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012a8:	81a3      	strh	r3, [r4, #12]
 80012aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80012ae:	e790      	b.n	80011d2 <__sflush_r+0x1a>
 80012b0:	4407      	add	r7, r0
 80012b2:	1a36      	subs	r6, r6, r0
 80012b4:	e7ea      	b.n	800128c <__sflush_r+0xd4>
 80012b6:	bf00      	nop
 80012b8:	dfbffffe 	.word	0xdfbffffe

080012bc <_fflush_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	690b      	ldr	r3, [r1, #16]
 80012c0:	4605      	mov	r5, r0
 80012c2:	460c      	mov	r4, r1
 80012c4:	b913      	cbnz	r3, 80012cc <_fflush_r+0x10>
 80012c6:	2500      	movs	r5, #0
 80012c8:	4628      	mov	r0, r5
 80012ca:	bd38      	pop	{r3, r4, r5, pc}
 80012cc:	b118      	cbz	r0, 80012d6 <_fflush_r+0x1a>
 80012ce:	6a03      	ldr	r3, [r0, #32]
 80012d0:	b90b      	cbnz	r3, 80012d6 <_fflush_r+0x1a>
 80012d2:	f7ff f9b1 	bl	8000638 <__sinit>
 80012d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d0f3      	beq.n	80012c6 <_fflush_r+0xa>
 80012de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012e0:	07d0      	lsls	r0, r2, #31
 80012e2:	d404      	bmi.n	80012ee <_fflush_r+0x32>
 80012e4:	0599      	lsls	r1, r3, #22
 80012e6:	d402      	bmi.n	80012ee <_fflush_r+0x32>
 80012e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ea:	f7ff fb9a 	bl	8000a22 <__retarget_lock_acquire_recursive>
 80012ee:	4628      	mov	r0, r5
 80012f0:	4621      	mov	r1, r4
 80012f2:	f7ff ff61 	bl	80011b8 <__sflush_r>
 80012f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012f8:	07da      	lsls	r2, r3, #31
 80012fa:	4605      	mov	r5, r0
 80012fc:	d4e4      	bmi.n	80012c8 <_fflush_r+0xc>
 80012fe:	89a3      	ldrh	r3, [r4, #12]
 8001300:	059b      	lsls	r3, r3, #22
 8001302:	d4e1      	bmi.n	80012c8 <_fflush_r+0xc>
 8001304:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001306:	f7ff fb8d 	bl	8000a24 <__retarget_lock_release_recursive>
 800130a:	e7dd      	b.n	80012c8 <_fflush_r+0xc>

0800130c <__swhatbuf_r>:
 800130c:	b570      	push	{r4, r5, r6, lr}
 800130e:	460c      	mov	r4, r1
 8001310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001314:	2900      	cmp	r1, #0
 8001316:	b096      	sub	sp, #88	; 0x58
 8001318:	4615      	mov	r5, r2
 800131a:	461e      	mov	r6, r3
 800131c:	da0d      	bge.n	800133a <__swhatbuf_r+0x2e>
 800131e:	89a3      	ldrh	r3, [r4, #12]
 8001320:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001324:	f04f 0100 	mov.w	r1, #0
 8001328:	bf0c      	ite	eq
 800132a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800132e:	2340      	movne	r3, #64	; 0x40
 8001330:	2000      	movs	r0, #0
 8001332:	6031      	str	r1, [r6, #0]
 8001334:	602b      	str	r3, [r5, #0]
 8001336:	b016      	add	sp, #88	; 0x58
 8001338:	bd70      	pop	{r4, r5, r6, pc}
 800133a:	466a      	mov	r2, sp
 800133c:	f000 f848 	bl	80013d0 <_fstat_r>
 8001340:	2800      	cmp	r0, #0
 8001342:	dbec      	blt.n	800131e <__swhatbuf_r+0x12>
 8001344:	9901      	ldr	r1, [sp, #4]
 8001346:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800134a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800134e:	4259      	negs	r1, r3
 8001350:	4159      	adcs	r1, r3
 8001352:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001356:	e7eb      	b.n	8001330 <__swhatbuf_r+0x24>

08001358 <__smakebuf_r>:
 8001358:	898b      	ldrh	r3, [r1, #12]
 800135a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800135c:	079d      	lsls	r5, r3, #30
 800135e:	4606      	mov	r6, r0
 8001360:	460c      	mov	r4, r1
 8001362:	d507      	bpl.n	8001374 <__smakebuf_r+0x1c>
 8001364:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001368:	6023      	str	r3, [r4, #0]
 800136a:	6123      	str	r3, [r4, #16]
 800136c:	2301      	movs	r3, #1
 800136e:	6163      	str	r3, [r4, #20]
 8001370:	b002      	add	sp, #8
 8001372:	bd70      	pop	{r4, r5, r6, pc}
 8001374:	ab01      	add	r3, sp, #4
 8001376:	466a      	mov	r2, sp
 8001378:	f7ff ffc8 	bl	800130c <__swhatbuf_r>
 800137c:	9900      	ldr	r1, [sp, #0]
 800137e:	4605      	mov	r5, r0
 8001380:	4630      	mov	r0, r6
 8001382:	f7ff fbbb 	bl	8000afc <_malloc_r>
 8001386:	b948      	cbnz	r0, 800139c <__smakebuf_r+0x44>
 8001388:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800138c:	059a      	lsls	r2, r3, #22
 800138e:	d4ef      	bmi.n	8001370 <__smakebuf_r+0x18>
 8001390:	f023 0303 	bic.w	r3, r3, #3
 8001394:	f043 0302 	orr.w	r3, r3, #2
 8001398:	81a3      	strh	r3, [r4, #12]
 800139a:	e7e3      	b.n	8001364 <__smakebuf_r+0xc>
 800139c:	89a3      	ldrh	r3, [r4, #12]
 800139e:	6020      	str	r0, [r4, #0]
 80013a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013a4:	81a3      	strh	r3, [r4, #12]
 80013a6:	9b00      	ldr	r3, [sp, #0]
 80013a8:	6163      	str	r3, [r4, #20]
 80013aa:	9b01      	ldr	r3, [sp, #4]
 80013ac:	6120      	str	r0, [r4, #16]
 80013ae:	b15b      	cbz	r3, 80013c8 <__smakebuf_r+0x70>
 80013b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013b4:	4630      	mov	r0, r6
 80013b6:	f000 f81d 	bl	80013f4 <_isatty_r>
 80013ba:	b128      	cbz	r0, 80013c8 <__smakebuf_r+0x70>
 80013bc:	89a3      	ldrh	r3, [r4, #12]
 80013be:	f023 0303 	bic.w	r3, r3, #3
 80013c2:	f043 0301 	orr.w	r3, r3, #1
 80013c6:	81a3      	strh	r3, [r4, #12]
 80013c8:	89a3      	ldrh	r3, [r4, #12]
 80013ca:	431d      	orrs	r5, r3
 80013cc:	81a5      	strh	r5, [r4, #12]
 80013ce:	e7cf      	b.n	8001370 <__smakebuf_r+0x18>

080013d0 <_fstat_r>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4d07      	ldr	r5, [pc, #28]	; (80013f0 <_fstat_r+0x20>)
 80013d4:	2300      	movs	r3, #0
 80013d6:	4604      	mov	r4, r0
 80013d8:	4608      	mov	r0, r1
 80013da:	4611      	mov	r1, r2
 80013dc:	602b      	str	r3, [r5, #0]
 80013de:	f7ff f819 	bl	8000414 <_fstat>
 80013e2:	1c43      	adds	r3, r0, #1
 80013e4:	d102      	bne.n	80013ec <_fstat_r+0x1c>
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	b103      	cbz	r3, 80013ec <_fstat_r+0x1c>
 80013ea:	6023      	str	r3, [r4, #0]
 80013ec:	bd38      	pop	{r3, r4, r5, pc}
 80013ee:	bf00      	nop
 80013f0:	200001b8 	.word	0x200001b8

080013f4 <_isatty_r>:
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4d06      	ldr	r5, [pc, #24]	; (8001410 <_isatty_r+0x1c>)
 80013f8:	2300      	movs	r3, #0
 80013fa:	4604      	mov	r4, r0
 80013fc:	4608      	mov	r0, r1
 80013fe:	602b      	str	r3, [r5, #0]
 8001400:	f7ff f817 	bl	8000432 <_isatty>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_isatty_r+0x1a>
 8001408:	682b      	ldr	r3, [r5, #0]
 800140a:	b103      	cbz	r3, 800140e <_isatty_r+0x1a>
 800140c:	6023      	str	r3, [r4, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	200001b8 	.word	0x200001b8

08001414 <_sbrk_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4d06      	ldr	r5, [pc, #24]	; (8001430 <_sbrk_r+0x1c>)
 8001418:	2300      	movs	r3, #0
 800141a:	4604      	mov	r4, r0
 800141c:	4608      	mov	r0, r1
 800141e:	602b      	str	r3, [r5, #0]
 8001420:	f7ff f81e 	bl	8000460 <_sbrk>
 8001424:	1c43      	adds	r3, r0, #1
 8001426:	d102      	bne.n	800142e <_sbrk_r+0x1a>
 8001428:	682b      	ldr	r3, [r5, #0]
 800142a:	b103      	cbz	r3, 800142e <_sbrk_r+0x1a>
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	bd38      	pop	{r3, r4, r5, pc}
 8001430:	200001b8 	.word	0x200001b8

08001434 <_init>:
 8001434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001436:	bf00      	nop
 8001438:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800143a:	bc08      	pop	{r3}
 800143c:	469e      	mov	lr, r3
 800143e:	4770      	bx	lr

08001440 <_fini>:
 8001440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001442:	bf00      	nop
 8001444:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001446:	bc08      	pop	{r3}
 8001448:	469e      	mov	lr, r3
 800144a:	4770      	bx	lr
